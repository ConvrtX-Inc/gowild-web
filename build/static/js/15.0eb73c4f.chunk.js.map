{"version":3,"sources":["pages/dashboard/RouteList.tsx"],"names":["RouteList","mounted","useMounted","settings","useSettings","useState","routeLists","setRouteLists","useEffect","gtm","push","event","getRouteLists","useCallback","a","token","sessionStorage","getItem","URL","process","CONFIG","headers","Authorization","axios","get","apiResponse","console","log","data","current","error","sx","backgroundColor","minHeight","pt","pb","StyledContainer","maxWidth","compact","pl","pr","container","justifyContent","item","ContentTitleTypography","FlexiGrid","IconBox","src","width","height","mt","normalRoutes","styled","Container","Typography","Grid","Box"],"mappings":"0TAkGeA,UA9EO,WACpB,IAAMC,EAAUC,cACRC,EAAaC,cAAbD,SACR,EAAoCE,mBAAwB,IAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAgBC,sBAAW,sBAAC,kCAAAC,EAAA,sEAExBC,EAAQC,eAAeC,QAAQ,SAC/BC,EAHwB,UAGfC,uCAHe,iBAIxBC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYP,KANC,SASJQ,IAAMC,IAAIN,EAAKE,GATX,OASxBK,EATwB,OAU9BC,QAAQC,IAAI,cAAeF,EAAYG,MAEnC3B,EAAQ4B,SACVtB,EAAckB,EAAYG,MAbE,kDAgB9BF,QAAQI,MAAR,MAhB8B,0DAkB/B,CAAC7B,IAMJ,OAJAO,qBAAU,WACRI,MACC,CAACA,IAGF,qCACE,cAAC,IAAD,UACE,2DAEF,cAAC,IAAD,CACEmB,GAAI,CAEFC,gBAAiB,UACjBC,UAAW,OACXC,GAAI,OACJC,GAAI,QANR,SASE,eAACC,EAAD,CACEC,WAAUlC,EAASmC,SAAU,KAC7BP,GAAI,CAAEQ,GAAI,kBAAmBC,GAAI,mBAFnC,UAIE,eAAC,IAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAAC,IAAD,CAAMC,MAAI,EAAV,SACE,cAACC,EAAD,6BAEF,eAACC,EAAD,CAAWF,MAAI,EAAf,UACE,cAACG,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,QAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,IAAI,yCACJhB,GAAI,CAAEiB,MAAO,GAAIC,OAAQ,cAKjC,cAAC,IAAD,CAAKlB,GAAI,CAAEmB,GAAI,QAAf,SACE,cAAC,IAAD,CAAgBC,aAAc7C,eAU1C,IAAM8B,EAAkBgB,YAAOC,IAAPD,CAAH,sHAOfR,EAAyBQ,YAAOE,IAAPF,CAAH,iOAYtBP,EAAYO,YAAOG,IAAPH,CAAH,6NAYTN,EAAUM,YAAOI,IAAPJ,CAAH","file":"static/js/15.0eb73c4f.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport type { FC } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport { RouteListTable } from \"../../components/dashboard/route-list\";\r\nimport useMounted from \"../../hooks/useMounted\";\r\nimport NotificationIcon from \"../../icons/WorkspaceNotification\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport gtm from \"../../lib/gtm\";\r\nimport type { NormalRoute } from \"../../types/route-lists\";\r\n\r\nconst RouteList: FC = () => {\r\n  const mounted = useMounted();\r\n  const { settings } = useSettings();\r\n  const [routeLists, setRouteLists] = useState<NormalRoute[]>([]);\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: \"page_view\" });\r\n  }, []);\r\n\r\n  const getRouteLists = useCallback(async () => {\r\n    try {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      const URL = `${process.env.REACT_APP_BACKEND_URL}/api/v1/route`;\r\n      const CONFIG = {\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      };\r\n      const apiResponse = await axios.get(URL, CONFIG);\r\n      console.log(\"Route Lists\", apiResponse.data);\r\n\r\n      if (mounted.current) {\r\n        setRouteLists(apiResponse.data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [mounted]);\r\n\r\n  useEffect(() => {\r\n    getRouteLists();\r\n  }, [getRouteLists]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Route List | Go Wild</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          // backgroundColor: \"background.default\",\r\n          backgroundColor: \"#1D140C\",\r\n          minHeight: \"100%\",\r\n          pt: \"55px\",\r\n          pb: \"61px\",\r\n        }}\r\n      >\r\n        <StyledContainer\r\n          maxWidth={settings.compact ? \"xl\" : false}\r\n          sx={{ pl: \"28px !important\", pr: \"89px !important\" }}\r\n        >\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <ContentTitleTypography>Normal Route</ContentTitleTypography>\r\n            </Grid>\r\n            <FlexiGrid item>\r\n              <IconBox>\r\n                <IconButton>\r\n                  <NotificationIcon />\r\n                </IconButton>\r\n              </IconBox>\r\n              <Box>\r\n                <Avatar\r\n                  src=\"/static/mock-images/avatars/gowild.png\"\r\n                  sx={{ width: 44, height: 44 }}\r\n                />\r\n              </Box>\r\n            </FlexiGrid>\r\n          </Grid>\r\n          <Box sx={{ mt: \"27px\" }}>\r\n            <RouteListTable normalRoutes={routeLists} />\r\n          </Box>\r\n        </StyledContainer>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RouteList;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  && {\r\n    padding-left: \"70px !important\";\r\n    padding-right: \"60px !important\";\r\n  }\r\n`;\r\n\r\nconst ContentTitleTypography = styled(Typography)`\r\n  && {\r\n    font-family: \"Samsung Sharp Sans Bold\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n    line-height: 50px;\r\n    color: #ffffff;\r\n    margin-left: 38px;\r\n  }\r\n`;\r\n\r\nconst FlexiGrid = styled(Grid)`\r\n  && {\r\n    /* padding-left: 8px; */\r\n    margin-bottom: 7.5px;\r\n    width: 353px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst IconBox = styled(Box)`\r\n  && {\r\n    width: 48px;\r\n    height: 48px;\r\n    background: #ffffff;\r\n    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.03);\r\n    border-radius: 10px;\r\n    margin-left: auto;\r\n    margin-right: 71px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n"],"sourceRoot":""}