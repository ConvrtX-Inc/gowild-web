{"version":3,"sources":["icons/WorkspaceNotification.tsx","enums/guidelinetab.ts","components/dashboard/guidelines/GuidelineTabs.tsx","components/dashboard/guidelines/LogItem.tsx","components/dashboard/guidelines/LogContent.tsx","components/dashboard/guidelines/GuidelinesContent.tsx","pages/dashboard/Guidelines.tsx"],"names":["WorkspaceNotification","createSvgIcon","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","GuidelineTab","GuidelineTabsGroup","styled","ToggleButtonGroup","GuidelineTabElem","ToggleButton","GuidelineTabs","tabOpened","onTabChange","value","exclusive","onChange","aria-label","sx","px","TermsAndConditions","FAQ","EWaiver","LogItem","date","type","LogItemBox","py","DateText","variant","toLocaleDateString","Typography","fontFamily","Box","LogContent","logs","lastDateUpdated","length","LogBox","pl","TitleHeading","mb","toLocaleString","month","getDate","getFullYear","opacity","map","_","i","logsArr","item","GuidelinesContent","useState","tabOpen","setTabOpen","t","terms","fq","faq","eW","eWaiver","tLogs","setLogs","textAreaValue","setTextAreaValue","handleTabChange","event","tab","StyledCard","padding","initialValues","textValue","onSubmit","values","a","setSubmitting","state","Date","enableReinitialize","touched","handleBlur","handleSubmit","handleChange","noValidate","style","display","pb","flex","pr","GuidelinesTextArea","onBlur","SaveButton","$touched","TextareaAutosize","Button","props","Card","StyledContainer","Guidelines","settings","useSettings","useEffect","gtm","push","backgroundColor","minHeight","pt","maxWidth","compact","Grid","container","justifyContent","ContentTitleTypography","FlexiGrid","IconBox","IconButton","Avatar","src","mt","Container"],"mappings":"0GAAA,mBAEMA,EAAwBC,YAC5B,sBACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,mJACFC,OAAO,UACPC,YAAY,IACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,oLACFJ,KAAK,eAGT,yBAGaL,O,4CC3BVc,E,8LAAAA,K,wCAAAA,E,UAAAA,E,sBAAAA,M,KAOUA,I,0BAAAA,I,yBCsCTC,EAAqBC,YAAOC,IAAPD,CAAH,+FAOlBE,EAAmBF,YAAOG,IAAPH,CAAH,+QAePI,EAtD+B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAC1D,OACE,eAACP,EAAD,CACEQ,MAAOF,EACPG,WAAS,EACTC,SAAUH,EACVI,aAAW,iBACXC,GAAI,CACFC,GAAI,OANR,UASE,cAACV,EAAD,CACEK,MAAOT,EAAae,mBACpBH,aAAYZ,EAAae,mBAF3B,SAIGf,EAAae,qBAGhB,cAACX,EAAD,CAAkBK,MAAOT,EAAagB,IAAKJ,aAAYZ,EAAagB,IAApE,SACGhB,EAAagB,MAGhB,cAACZ,EAAD,CACEK,MAAOT,EAAaiB,QACpBL,aAAYZ,EAAaiB,QAF3B,SAIGjB,EAAaiB,cCpBPC,EATmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACzC,OACE,eAACC,EAAD,CAAYC,GAAI,EAAhB,UACE,cAACC,EAAD,CAAUC,QAAQ,YAAlB,SAA+BL,EAAKM,uBACpC,eAACC,EAAA,EAAD,CAAYC,WAAW,UAAvB,cAAmCP,EAAnC,WAOAC,EAAanB,YAAO0B,IAAP1B,CAAH,gFAMVqB,EAAWrB,YAAOwB,IAAPxB,CAAH,kHCUC2B,EA1ByB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnCC,EAAwBD,EAAKA,EAAKE,OAAS,GAAGb,KAEpD,OACE,eAACc,EAAD,CAAQC,GAAI,EAAZ,UACE,eAACC,EAAD,CAAcX,QAAQ,KAAKY,GAAI,EAA/B,UACGL,EAAgBM,eAAe,UAAW,CAAEC,MAAO,SAAW,IAC9DP,EAAgBQ,UAFnB,KAEgCR,EAAgBS,iBAEhD,cAACd,EAAA,EAAD,CAAYb,GAAI,CAAE4B,QAAS,MAAOd,WAAY,WAA9C,yBAGCG,EAAKY,KAAI,SAACC,EAAGC,EAAGC,GACf,IAAMC,EAAOD,EAAQA,EAAQb,OAAS,EAAIY,GAC1C,OACE,cAAC,EAAD,CACEzB,KAAM2B,EAAK3B,KACXC,KAAM0B,EAAK1B,MAFb,UAGU0B,EAAK1B,KAHf,YAGuBwB,WAU3BT,EAAejC,YAAOwB,IAAPxB,CAAH,sIAQZ+B,EAAS/B,YAAO0B,IAAP1B,CAAH,yJCsCG6C,EA3Ee,WAC5B,MAA8BC,mBAC5BhD,EAAae,oBADf,mBAAOkC,EAAP,KAAgBC,EAAhB,KAKA,EAA0BF,mBAAiBG,IAA3C,mBAAOC,EAAP,KACA,GADA,KACsBJ,mBAAiBK,KAAvC,mBAAOC,EAAP,KACA,GADA,KAC8BN,mBAAiBO,KAA/C,mBAAOC,EAAP,KACA,GADA,KACwBR,mBAAyBS,KAAjD,mBAAO3B,EAAP,KAAa4B,EAAb,KAEA,EAA0CV,mBAASG,IAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAEMC,EAAkB,SACtBC,EACAC,GAIA,OAFAb,EAAWa,GAEHA,GACN,KAAK/D,EAAae,mBAChB6C,EAAiBR,GACjB,MACF,KAAKpD,EAAagB,IAChB4C,EAAiBN,GACjB,MACF,KAAKtD,EAAaiB,QAChB2C,EAAiBJ,KAKvB,OACE,cAACQ,GAAD,UACE,cAACpC,EAAA,EAAD,CAAKqC,QAAS,EAAGpD,GAAI,CAAExB,OAAQ,sBAA/B,SACE,cAAC,IAAD,CACE6E,cAAe,CAAEC,UAAWR,GAC5BS,SAAQ,uCAAE,WAAOC,EAAP,YAAAC,EAAA,+DAAiBC,cAAjB,kBACRb,GAAQ,SAACc,GAAD,4BACHA,GADG,CAEN,CAAEpD,KAAM6B,EAAS9B,KAAM,IAAIsD,YAHrB,2CAAF,wDAMRC,oBAAkB,EARpB,SAUG,gBAAGL,EAAH,EAAGA,OAAQM,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,aAAcC,EAA9C,EAA8CA,aAA9C,OACC,uBAAMC,YAAU,EAACX,SAAUS,EAAcG,MAAO,CAAE3F,OAAQ,QAA1D,UACE,cAAC,EAAD,CACEkB,UAAW0C,EACXzC,YAAaqD,IAEf,eAACjC,EAAA,EAAD,CAAKqD,QAAQ,OAAO5F,OAAO,OAAO6F,GAAI,EAAtC,UACE,cAACtD,EAAA,EAAD,CAAKuD,KAAK,IAAIC,GAAI,EAAlB,SACE,cAACC,EAAD,CACEzE,aAAW,qBACXH,MAAO4D,EAAOF,UACdmB,OAAQV,EAAW,aACnBjE,SAAUmE,EAAa,iBAG3B,cAAClD,EAAA,EAAD,CAAKuD,KAAK,IAAV,SACE,cAAC,EAAD,CAAYrD,KAAMA,SAGtB,cAACyD,EAAD,CAAYC,SAAUb,EAAQR,UAAW/C,KAAK,SAA9C,6BAaRiE,EAAqBnF,YAAOuF,IAAPvF,CAAH,8VAiBlBqF,EAAarF,YAAOwF,IAAPxF,CAAH,6HAEQ,SAACyF,GAAD,OAAYA,EAAMH,SAAW,UAAY,aAM3DxB,GAAa9D,YAAO0F,IAAP1F,CAAH,4JAaViD,GACJ,0pBAEIE,GACJ,0XAEIE,GACJ,yWAEIE,GAAwB,CAC5B,CACEtC,KAAM,IAAIsD,KAAK,yCACfrD,KAAMpB,EAAae,oBAErB,CACEI,KAAM,IAAIsD,KAAK,mCACfrD,KAAMpB,EAAagB,M,UCvEjB6E,IAFSC,UApDQ,WACrB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,KAAIC,KAAK,CAAErC,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,2DAEF,cAAClC,EAAA,EAAD,CACEf,GAAI,CAEFuF,gBAAiB,UACjBC,UAAW,OACXC,GAAI,OACJpB,GAAI,QANR,SASE,eAACW,GAAD,CACEU,WAAUR,EAASS,SAAU,KAC7B3F,GAAI,CAAEqB,GAAI,kBAAmBkD,GAAI,mBAFnC,UAIE,eAACqB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAACF,EAAA,EAAD,CAAM3D,MAAI,EAAV,SACE,cAAC8D,GAAD,2BAEF,eAACC,GAAD,CAAW/D,MAAI,EAAf,UACE,cAACgE,GAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAACnF,EAAA,EAAD,UACE,cAACoF,EAAA,EAAD,CACEC,IAAI,yCACJpG,GAAI,CAAEzB,MAAO,GAAIC,OAAQ,cAKjC,cAACuC,EAAA,EAAD,CAAKf,GAAI,CAAEqG,GAAI,OAAQ7H,OAAQ,uBAA/B,SACE,cAAC,EAAD,eAUYa,YAAOiH,IAAPjH,CAAH,uHAOf0G,GAAyB1G,YAAOwB,IAAPxB,CAAH,iOAYtB2G,GAAY3G,YAAOuG,IAAPvG,CAAH,6NAYT4G,GAAU5G,YAAO0B,IAAP1B,CAAH","file":"static/js/8.c02c8985.chunk.js","sourcesContent":["import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst WorkspaceNotification = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 22 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M18 11V8C18 4.13401 14.866 1 11 1C7.13401 1 4 4.13401 4 8V11C4 14.3 1 15.1 1 17C1 18.7 4.9 20 11 20C17.1 20 21 18.7 21 17C21 15.1 18 14.3 18 11Z\"\r\n      stroke=\"#09110E\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M10.9995 22C9.98853 22 9.03853 21.966 8.14453 21.9C8.5357 23.1478 9.69187 23.997 10.9995 23.997C12.3072 23.997 13.4634 23.1478 13.8545 21.9C12.9605 21.966 12.0105 22 10.9995 22Z\"\r\n      fill=\"#09110E\"\r\n    />\r\n  </svg>,\r\n  \"WorkspaceNotification\"\r\n);\r\n\r\nexport default WorkspaceNotification;\r\n","enum GuidelineTab {\r\n    TermsAndConditions = \"Terms & Conditions\",\r\n    FAQ = \"FAQ\",\r\n    EWaiver = \"E - Waiver\",\r\n}\r\n\r\n\r\nexport default GuidelineTab;","import { ToggleButton, ToggleButtonGroup } from \"@material-ui/core\";\r\nimport { FC, } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GuidelineTab } from \"../../../enums\";\r\n\r\ninterface GuidelineTabsProps {\r\n  tabOpened: GuidelineTab;\r\n  onTabChange: (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    tab: GuidelineTab\r\n  ) => void;\r\n}\r\n\r\nconst GuidelineTabs: FC<GuidelineTabsProps> = ({ tabOpened, onTabChange }) => {\r\n  return (\r\n    <GuidelineTabsGroup\r\n      value={tabOpened}\r\n      exclusive\r\n      onChange={onTabChange}\r\n      aria-label=\"Guideline Tabs\"\r\n      sx={{\r\n        px: \"1em\",\r\n      }}\r\n    >\r\n      <GuidelineTabElem\r\n        value={GuidelineTab.TermsAndConditions}\r\n        aria-label={GuidelineTab.TermsAndConditions}\r\n      >\r\n        {GuidelineTab.TermsAndConditions}\r\n      </GuidelineTabElem>\r\n\r\n      <GuidelineTabElem value={GuidelineTab.FAQ} aria-label={GuidelineTab.FAQ}>\r\n        {GuidelineTab.FAQ}\r\n      </GuidelineTabElem>\r\n\r\n      <GuidelineTabElem\r\n        value={GuidelineTab.EWaiver}\r\n        aria-label={GuidelineTab.EWaiver}\r\n      >\r\n        {GuidelineTab.EWaiver}\r\n      </GuidelineTabElem>\r\n    </GuidelineTabsGroup>\r\n  );\r\n};\r\n\r\nconst GuidelineTabsGroup = styled(ToggleButtonGroup)`\r\n  && {\r\n    color: #c0c0c0;\r\n    font-family: \"Gilroy-Bold\";\r\n  }\r\n`;\r\n\r\nconst GuidelineTabElem = styled(ToggleButton)`\r\n  && {\r\n    border: 0;\r\n    border-radius: 0;\r\n    &.MuiToggleButton-root {\r\n      color: #c0c0c0;\r\n    }\r\n    &.Mui-selected {\r\n      background-color: transparent;\r\n      color: #000000;\r\n      border-bottom: 3px solid #e4572e;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GuidelineTabs;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\ninterface LogItemProps {\r\n  date: Date;\r\n  type: string;\r\n}\r\n\r\nconst LogItem: FC<LogItemProps> = ({ date, type }) => {\r\n  return (\r\n    <LogItemBox py={1}>\r\n      <DateText variant=\"subtitle2\">{date.toLocaleDateString()}</DateText>\r\n      <Typography fontFamily=\"Poppins\"> {type} </Typography>\r\n    </LogItemBox>\r\n  );\r\n};\r\n\r\nexport default LogItem;\r\n\r\nconst LogItemBox = styled(Box)`\r\n  && {\r\n    border-bottom: 1px solid #efefef;\r\n  }\r\n`;\r\n\r\nconst DateText = styled(Typography)`\r\n  && {\r\n    color: #979797;\r\n    font-weight: 600;\r\n    font-family: \"Poppins\";\r\n  }\r\n`;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FC } from \"react\";\r\nimport { GuidelineLog } from \"src/types/guidelines\";\r\nimport styled from \"styled-components\";\r\nimport LogItem from \"./LogItem\";\r\n\r\ninterface LogContentProps {\r\n  logs: GuidelineLog[];\r\n}\r\n\r\nconst LogContent: FC<LogContentProps> = ({ logs }) => {\r\n  const lastDateUpdated: Date = logs[logs.length - 1].date;\r\n\r\n  return (\r\n    <LogBox pl={2}>\r\n      <TitleHeading variant=\"h5\" mb={2}>\r\n        {lastDateUpdated.toLocaleString(\"default\", { month: \"long\" })}{\" \"}\r\n        {lastDateUpdated.getDate()}, {lastDateUpdated.getFullYear()}\r\n      </TitleHeading>\r\n      <Typography sx={{ opacity: \"0.3\", fontFamily: \"Poppins\" }}>\r\n        Update Logs\r\n      </Typography>\r\n      {logs.map((_, i, logsArr) => {\r\n        const item = logsArr[logsArr.length - 1 - i];\r\n        return (\r\n          <LogItem\r\n            date={item.date}\r\n            type={item.type}\r\n            key={`${item.type}-${i}`}\r\n          />\r\n        );\r\n      })}\r\n    </LogBox>\r\n  );\r\n};\r\n\r\nexport default LogContent;\r\n\r\nconst TitleHeading = styled(Typography)`\r\n  && {\r\n    color: #000;\r\n    font-weight: 700;\r\n    font-family: \"Gilroy-SemiBold\", \"Gilroy-Bold\";\r\n  }\r\n`;\r\n\r\nconst LogBox = styled(Box)`\r\n  && {\r\n    height: 100%;\r\n    border-left: 1px dashed rgba(0, 0, 0, 0.2);\r\n    color: #979797;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n","import { Box, Button, Card, TextareaAutosize } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { FC, useState } from \"react\";\r\nimport { GuidelineTab } from \"src/enums\";\r\nimport { GuidelineLog } from \"src/types/guidelines\";\r\nimport styled from \"styled-components\";\r\n\r\nimport GuidelineTabs from \"./GuidelineTabs\";\r\nimport LogContent from \"./LogContent\";\r\n\r\nconst GuidelinesContent: FC = () => {\r\n  const [tabOpen, setTabOpen] = useState<GuidelineTab>(\r\n    GuidelineTab.TermsAndConditions\r\n  );\r\n\r\n// TODO: Update state handler to handle asynch\r\n  const [terms, setTerms] = useState<string>(t);\r\n  const [faq, setFaq] = useState<string>(fq);\r\n  const [eWaiver, setEWaiver] = useState<string>(eW);\r\n  const [logs, setLogs] = useState<GuidelineLog[]>(tLogs);\r\n\r\n  const [textAreaValue, setTextAreaValue] = useState(t);\r\n\r\n  const handleTabChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    tab: GuidelineTab\r\n  ): void => {\r\n    setTabOpen(tab);\r\n\r\n    switch (tab) {\r\n      case GuidelineTab.TermsAndConditions:\r\n        setTextAreaValue(terms);\r\n        break;\r\n      case GuidelineTab.FAQ:\r\n        setTextAreaValue(faq);\r\n        break;\r\n      case GuidelineTab.EWaiver:\r\n        setTextAreaValue(eWaiver);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCard>\r\n      <Box padding={3} sx={{ height: \"calc(100% - 101px)\" }}>\r\n        <Formik\r\n          initialValues={{ textValue: textAreaValue }}\r\n          onSubmit={async (values, { setSubmitting }): Promise<void> =>\r\n            setLogs((state): GuidelineLog[] => [\r\n              ...state,\r\n              { type: tabOpen, date: new Date() },\r\n            ])\r\n          }\r\n          enableReinitialize\r\n        >\r\n          {({ values, touched, handleBlur, handleSubmit, handleChange }) => (\r\n            <form noValidate onSubmit={handleSubmit} style={{ height: \"100%\" }}>\r\n              <GuidelineTabs\r\n                tabOpened={tabOpen}\r\n                onTabChange={handleTabChange}\r\n              ></GuidelineTabs>\r\n              <Box display=\"flex\" height=\"100%\" pb={2}>\r\n                <Box flex=\"3\" pr={2}>\r\n                  <GuidelinesTextArea\r\n                    aria-label=\"Guidlines textarea\"\r\n                    value={values.textValue}\r\n                    onBlur={handleBlur(\"textValue\")}\r\n                    onChange={handleChange(\"textValue\")}\r\n                  />\r\n                </Box>\r\n                <Box flex=\"1\">\r\n                  <LogContent logs={logs} />\r\n                </Box>\r\n              </Box>\r\n              <SaveButton $touched={touched.textValue} type=\"submit\">\r\n                Save\r\n              </SaveButton>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default GuidelinesContent;\r\n\r\nconst GuidelinesTextArea = styled(TextareaAutosize)`\r\n  && {\r\n    border: 1px solid #e4e4e4;\r\n    border-radius: 20px;\r\n    padding: 1.5em;\r\n    resize: none;\r\n    background-color: #fff;\r\n    outline: none;\r\n    color: #898a8d;\r\n    height: 100% !important;\r\n    width: 100%;\r\n    overflow-y: auto !important;\r\n    line-height: 24px;\r\n    font-family: \"Gilroy-Medium\";\r\n  }\r\n`;\r\n\r\nconst SaveButton = styled(Button)`\r\n  && {\r\n    background-color: ${(props) => (props.$touched ? \"#1D140C\" : \"#021f3d\")};\r\n    color: #fff;\r\n    height: 50px;\r\n    width: 177px;\r\n  }\r\n`;\r\nconst StyledCard = styled(Card)`\r\n  && {\r\n    box-shadow: none;\r\n    border-radius: 20px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\n\r\n// TODO: Delete these mock data after API integration\r\n\r\nconst t =\r\n  \"Aliquam eu nunc sit amet dolor aliquet elementum. Duis a feugiat nisl. Praesent at enim erat. Suspendisse cursus tristique felis vel dictum. Nam tempus diam ac massa venenatis tempor a ultricies orci. Donec nibh orci, egestas eget lacus sit amet, venenatis egestas odio. Maecenas odio ante, mattis eu faucibus hendrerit, commodo in sapien. In hac habitasse platea dictumst. Curabitur euismod orci dui, a laoreet nulla mattis quis. Sed a elementum nisi, at molestie turpis. Cras finibus nibh sapien, et vulputate sem vulputate a. Maecenas sit amet lacinia lectus. Vivamus in diam ut lorem congue fermentum nec nec lectus. Donec blandit turpis eget finibus rhoncus.\";\r\n\r\nconst fq =\r\n  \"Maecenas et erat mattis, molestie felis nec, tincidunt dolor. Mauris tristique gravida justo quis ornare. Duis facilisis nisl ut mi rhoncus, et consequat metus vulputate. Donec et dolor leo. Etiam vitae enim vel sapien placerat luctus et eu metus. Donec feugiat vitae nibh a congue. Praesent nec neque sed arcu fermentum feugiat et sit amet nisl. Aliquam id tristique turpis.\";\r\n\r\nconst eW =\r\n  \"Pellentesque accumsan commodo lacus quis dapibus. Duis laoreet felis et ipsum consequat, vitae efficitur lorem ultricies. Phasellus ultricies sed ante sed vulputate. Donec non iaculis turpis. Nulla feugiat mi id enim molestie interdum. Nam erat dolor, finibus sed tincidunt vel, fermentum ac velit. Vivamus ac arcu non augue ornare tincidunt quis vitae urna.\";\r\n\r\nconst tLogs: GuidelineLog[] = [\r\n  {\r\n    date: new Date(\"December 31, 1975, 23:15:30 GMT+11:00\"),\r\n    type: GuidelineTab.TermsAndConditions,\r\n  },\r\n  {\r\n    date: new Date(\"Jan 1, 2020, 23:15:30 GMT+11:00\"),\r\n    type: GuidelineTab.FAQ,\r\n  },\r\n];\r\n","import {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Avatar,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { FC, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport styled from \"styled-components\";\r\nimport NotificationIcon from \"../../icons/WorkspaceNotification\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport { GuidelinesContent } from \"src/components/dashboard/guidelines\";\r\nimport gtm from \"../../lib/gtm\";\r\n\r\nconst Guidelines: FC = () => {\r\n  const { settings } = useSettings();\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: \"page_view\" });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Guidelines | Go Wild</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          // backgroundColor: \"background.default\",\r\n          backgroundColor: \"#1D140C\",\r\n          minHeight: \"100%\",\r\n          pt: \"55px\",\r\n          pb: \"61px\",\r\n        }}\r\n      >\r\n        <StyledContainer\r\n          maxWidth={settings.compact ? \"xl\" : false}\r\n          sx={{ pl: \"28px !important\", pr: \"89px !important\" }}\r\n        >\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <ContentTitleTypography>Guidelines</ContentTitleTypography>\r\n            </Grid>\r\n            <FlexiGrid item>\r\n              <IconBox>\r\n                <IconButton>\r\n                  <NotificationIcon />\r\n                </IconButton>\r\n              </IconBox>\r\n              <Box>\r\n                <Avatar\r\n                  src=\"/static/mock-images/avatars/gowild.png\"\r\n                  sx={{ width: 44, height: 44 }}\r\n                />\r\n              </Box>\r\n            </FlexiGrid>\r\n          </Grid>\r\n          <Box sx={{ mt: \"27px\", height: \"calc(100vh - 157px)\" }}>\r\n            <GuidelinesContent></GuidelinesContent>\r\n          </Box>\r\n        </StyledContainer>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Guidelines;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  && {\r\n    padding-left: \"70px !important\";\r\n    padding-right: \"60px !important\";\r\n  }\r\n`;\r\n\r\nconst ContentTitleTypography = styled(Typography)`\r\n  && {\r\n    font-family: \"Samsung Sharp Sans Bold\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n    line-height: 50px;\r\n    color: #ffffff;\r\n    margin-left: 38px;\r\n  }\r\n`;\r\n\r\nconst FlexiGrid = styled(Grid)`\r\n  && {\r\n    /* padding-left: 8px; */\r\n    margin-bottom: 7.5px;\r\n    width: 353px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst IconBox = styled(Box)`\r\n  && {\r\n    width: 48px;\r\n    height: 48px;\r\n    background: #ffffff;\r\n    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.03);\r\n    border-radius: 10px;\r\n    margin-left: auto;\r\n    margin-right: 71px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n"],"sourceRoot":""}