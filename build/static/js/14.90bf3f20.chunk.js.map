{"version":3,"sources":["components/authentication/password-reset/PasswordResetAmplify.tsx","components/authentication/password-reset/PasswordResetJWT.tsx","pages/authentication/PasswordReset.tsx"],"names":["PasswordResetAmplify","mounted","useMounted","passwordReset","useAuth","location","useLocation","navigate","useNavigate","itemsRef","useRef","useEffect","current","slice","initialValues","code","email","state","username","password","passwordConfirm","submit","validationSchema","Yup","shape","of","required","max","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","join","console","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","noValidate","TextField","disabled","fullWidth","margin","value","variant","autoFocus","Boolean","helperText","label","name","onBlur","onChange","type","Typography","color","sx","mb","mt","Box","columnGap","display","gridTemplateColumns","py","map","ref","i","Array","isArray","length","inputRef","el","onKeyDown","event","focus","Number","isInteger","parseInt","key","onPaste","pasteArray","clipboardData","getData","split","valid","forEach","x","textAlign","FormHelperText","mx","find","undefined","Button","size","PasswordResetJWT","log","err","StyledForm","FieldLabel","StyledTextField","placeholder","InputProps","startAdornment","InputAdornment","position","fontSize","SubmitHelperText","CreateNewPassButton","styled","form","platformIcons","Amplify","Auth0","Firebase","JWT","BackgroundImgBox","PasswordReset","platform","gtm","push","BackgroundGradient","StyledContainer","maxWidth","width","justifyContent","height","to","src","alt","alignItems","LoginTitle","SubTitle","maxHeight","flexGrow","Container"],"mappings":"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","file":"static/js/14.90bf3f20.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport type { FC } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport type { Location } from \"history\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useMounted from \"../../../hooks/useMounted\";\r\n\r\ninterface LocationState {\r\n  username?: string;\r\n}\r\n\r\nconst PasswordResetAmplify: FC = () => {\r\n  const mounted = useMounted();\r\n  const { passwordReset } = useAuth() as any;\r\n  const location = useLocation() as Location<LocationState>;\r\n  const navigate = useNavigate();\r\n  const itemsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    itemsRef.current = itemsRef.current.slice(0, 6);\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        code: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n        email: location.state?.username || \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        submit: null,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        code: Yup.array().of(Yup.string().required(\"Code is required\")),\r\n        email: Yup.string()\r\n          .email(\"Must be a valid email\")\r\n          .max(255)\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(7, \"Must be at least 7 characters\")\r\n          .max(255)\r\n          .required(\"Required\"),\r\n        passwordConfirm: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Required\"),\r\n      })}\r\n      onSubmit={async (\r\n        values,\r\n        { setErrors, setStatus, setSubmitting }\r\n      ): Promise<void> => {\r\n        try {\r\n          await passwordReset(\r\n            values.email,\r\n            values.code.join(\"\"),\r\n            values.password\r\n          );\r\n\r\n          navigate(\"/authentication/login\");\r\n        } catch (err) {\r\n          console.error(err);\r\n          if (mounted.current) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n        touched,\r\n        values,\r\n      }): JSX.Element => (\r\n        <form noValidate onSubmit={handleSubmit}>\r\n          {!location.state?.username ? (\r\n            <TextField\r\n              autoFocus\r\n              error={Boolean(touched.email && errors.email)}\r\n              fullWidth\r\n              helperText={touched.email && errors.email}\r\n              label=\"Email Address\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              type=\"email\"\r\n              value={values.email}\r\n              variant=\"outlined\"\r\n            />\r\n          ) : (\r\n            <TextField\r\n              disabled\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={location.state.username}\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            sx={{\r\n              mb: 2,\r\n              mt: 3,\r\n            }}\r\n            variant=\"subtitle2\"\r\n          >\r\n            Verification code\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              columnGap: \"16px\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(7, 1fr)\",\r\n              py: 1,\r\n            }}\r\n          >\r\n            {[1, 2, 3, 4, 5, 6].map((ref, i) => (\r\n              <TextField\r\n                error={Boolean(\r\n                  Array.isArray(touched.code) &&\r\n                    touched.code.length === 6 &&\r\n                    errors.code\r\n                )}\r\n                fullWidth\r\n                inputRef={(el) => (itemsRef.current[i] = el)}\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                key={`codeNumber-${i}`}\r\n                name={`code[${i}]`}\r\n                onBlur={handleBlur}\r\n                onKeyDown={(event) => {\r\n                  if (event.code === \"ENTER\") {\r\n                    if (values.code[i]) {\r\n                      setFieldValue(`code[${i}]`, \"\");\r\n                      return;\r\n                    }\r\n\r\n                    if (i > 0) {\r\n                      setFieldValue(`code[${i}]`, \"\");\r\n                      itemsRef.current[i - 1].focus();\r\n                      return;\r\n                    }\r\n                  }\r\n\r\n                  if (Number.isInteger(parseInt(event.key, 10))) {\r\n                    setFieldValue(`code[${i}]`, event.key);\r\n\r\n                    if (i < 5) {\r\n                      itemsRef.current[i + 1].focus();\r\n                    }\r\n                  }\r\n                }}\r\n                onPaste={(event) => {\r\n                  const paste = event.clipboardData.getData(\"text\");\r\n                  const pasteArray = paste.split(\"\");\r\n\r\n                  if (pasteArray.length !== 6) {\r\n                    return;\r\n                  }\r\n\r\n                  let valid = true;\r\n\r\n                  pasteArray.forEach((x) => {\r\n                    if (!Number.isInteger(parseInt(x, 10))) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n\r\n                  if (valid) {\r\n                    setFieldValue(\"code\", pasteArray);\r\n                    itemsRef.current[5].focus();\r\n                  }\r\n                }}\r\n                value={values.code[i]}\r\n                sx={{\r\n                  display: \"inline-block\",\r\n                  textAlign: \"center\",\r\n                  \"& .MuiInputBase-input\": {\r\n                    textAlign: \"center\",\r\n                  },\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            ))}\r\n          </Box>\r\n          {Boolean(\r\n            Array.isArray(touched.code) &&\r\n              touched.code.length === 6 &&\r\n              errors.code\r\n          ) && (\r\n            <FormHelperText error sx={{ mx: \"14px\" }}>\r\n              {Array.isArray(errors.code) &&\r\n                errors.code.find((x) => x !== undefined)}\r\n            </FormHelperText>\r\n          )}\r\n          <TextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\r\n            fullWidth\r\n            helperText={touched.passwordConfirm && errors.passwordConfirm}\r\n            label=\"Password Confirmation\"\r\n            margin=\"normal\"\r\n            name=\"passwordConfirm\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.passwordConfirm}\r\n            variant=\"outlined\"\r\n          />\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>{errors.submit}</FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box sx={{ mt: 3 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PasswordResetAmplify;\r\n","import { useEffect, useRef } from \"react\";\r\nimport type { FC } from \"react\";\r\nimport {\r\n  // useLocation,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n// import type { Location } from \"history\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n// import useAuth from \"../../../hooks/useAuth\";\r\nimport useMounted from \"../../../hooks/useMounted\";\r\nimport PasswordIcon from \"../../../icons/LoginPadlock\";\r\n\r\n// interface LocationState {\r\n//   username?: string;\r\n// }\r\n\r\nconst PasswordResetJWT: FC = () => {\r\n  const mounted = useMounted();\r\n  // const { passwordReset } = useAuth() as any;\r\n  // const location = useLocation() as Location<LocationState>;\r\n  const navigate = useNavigate();\r\n  const itemsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    itemsRef.current = itemsRef.current.slice(0, 6);\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        submit: null,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        password: Yup.string()\r\n          .min(7, \"Must be at least 7 characters\")\r\n          .max(255)\r\n          .required(\"Required\"),\r\n        passwordConfirm: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Required\"),\r\n      })}\r\n      onSubmit={async (\r\n        values,\r\n        { setErrors, setStatus, setSubmitting }\r\n      ): Promise<void> => {\r\n        try {\r\n          // await passwordReset(values.password);\r\n          console.log(\"Created New Password Successfully\");\r\n          navigate(\"/authentication/login\");\r\n        } catch (err) {\r\n          console.error(err);\r\n          if (mounted.current) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n        touched,\r\n        values,\r\n      }): JSX.Element => (\r\n        <StyledForm noValidate onSubmit={handleSubmit}>\r\n          <FieldLabel>New Password</FieldLabel>\r\n          <StyledTextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            // label=\"Password\"\r\n            placeholder=\"type here\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <PasswordIcon fontSize=\"small\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <FieldLabel>Re-type New Password</FieldLabel>\r\n          <StyledTextField\r\n            error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\r\n            fullWidth\r\n            helperText={touched.passwordConfirm && errors.passwordConfirm}\r\n            // label=\"Password Confirmation\"\r\n            placeholder=\"type here\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <PasswordIcon fontSize=\"small\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            margin=\"normal\"\r\n            name=\"passwordConfirm\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.passwordConfirm}\r\n            variant=\"outlined\"\r\n          />\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>{errors.submit}</FormHelperText>\r\n            </Box>\r\n          )}\r\n          <SubmitHelperText>{errors.submit}</SubmitHelperText>\r\n          <Box>\r\n            <CreateNewPassButton\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Create New Password\r\n            </CreateNewPassButton>\r\n          </Box>\r\n        </StyledForm>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PasswordResetJWT;\r\n\r\nconst StyledForm = styled.form`\r\n  && {\r\n    && p.Mui-error {\r\n      /* color: white; */\r\n      position: absolute;\r\n      bottom: -20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitHelperText = styled(FormHelperText)`\r\n  && {\r\n    position: absolute;\r\n    top: 645px;\r\n    left: 303px;\r\n    color: #f44336;\r\n  }\r\n`;\r\n\r\nconst CreateNewPassButton = styled(Button)`\r\n  && {\r\n    height: 50px;\r\n    padding: 17px 0;\r\n    background: #021f3d;\r\n    border-radius: 16px;\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 0.875rem;\r\n    line-height: 16px;\r\n    color: rgba(255, 255, 255, 1);\r\n    text-align: center;\r\n    letter-spacing: 0.5px;\r\n  }\r\n`;\r\n\r\nconst FieldLabel = styled(Box)`\r\n  && {\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  && {\r\n    margin-top: 15px;\r\n    margin-bottom: 25px;\r\n    background: rgba(50, 54, 69, 1);\r\n    background: linear-gradient(\r\n      270deg,\r\n      rgba(50, 54, 69, 0.4) 0%,\r\n      rgba(50, 54, 69, 1) 90%\r\n    );\r\n    border-radius: 10px;\r\n\r\n    color: #8a8a8a;\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 27px;\r\n    && .Mui-focused fieldset {\r\n      border-width: 1px !important;\r\n      border-color: #2955a0;\r\n      border-style: solid;\r\n    }\r\n    && input {\r\n      color: #8a8a8a;\r\n      font-family: \"Poppins\";\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n      line-height: 27px;\r\n      display: flex;\r\n      align-items: center;\r\n      opacity: 1;\r\n      border: 0;\r\n      &::placeholder {\r\n        font-family: \"Poppins\";\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-size: 18px;\r\n        line-height: 27px;\r\n        display: flex;\r\n        align-items: center;\r\n        color: #8a8a8a;\r\n        opacity: 0.85;\r\n      }\r\n    }\r\n    && fieldset {\r\n      border-style: hidden;\r\n      border-radius: 10px;\r\n      /* border: 0; */\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport type { FC } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Box, Container } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  PasswordResetAmplify,\r\n  PasswordResetJWT,\r\n} from \"../../components/authentication/password-reset\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport gtm from \"../../lib/gtm\";\r\n\r\nconst platformIcons = {\r\n  Amplify: \"/static/icons/amplify.svg\",\r\n  Auth0: \"/static/icons/auth0.svg\",\r\n  Firebase: \"/static/icons/firebase.svg\",\r\n  JWT: \"/static/icons/jwt.svg\",\r\n};\r\n\r\nconst PasswordReset: FC = () => {\r\n  const { platform } = useAuth() as any;\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: \"page_view\" });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Password Reset | Go Wild</title>\r\n      </Helmet>\r\n\r\n      <BackgroundImgBox>\r\n        <BackgroundGradient>\r\n          <StyledContainer maxWidth=\"sm\">\r\n            <Box sx={{ width: \"472px\" }}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  mb: \"15.47px\",\r\n                  height: \"72px\",\r\n                }}\r\n              >\r\n                <RouterLink to=\"/\">\r\n                  <img\r\n                    src=\"/static/login/group-logo.png\"\r\n                    alt=\"nexxus-one-login-logo\"\r\n                  />\r\n                </RouterLink>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  alignItems: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  mb: \"71px\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <LoginTitle>Reset Password</LoginTitle>\r\n                  <SubTitle>Enter your details below</SubTitle>\r\n                </div>\r\n\r\n                {/* ------------------DYNAMIC FORMS------------------ */}\r\n                {platform !== \"JWT\" && (\r\n                  <Box\r\n                    sx={{\r\n                      height: 32,\r\n                      \"& > img\": {\r\n                        maxHeight: \"100%\",\r\n                        width: \"auto\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <img alt=\"Auth platform\" src={platformIcons[platform]} />\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  mt: 3,\r\n                }}\r\n              >\r\n                {platform === \"JWT\" && <PasswordResetJWT />}\r\n                {platform === \"Amplify\" && <PasswordResetAmplify />}\r\n              </Box>\r\n              {/* <Divider sx={{ my: 3 }} />\r\n              {platform === \"Amplify\" && (\r\n                <Link\r\n                  color=\"textSecondary\"\r\n                  component={RouterLink}\r\n                  to=\"/authentication/password-recovery\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Did you not receive the code?\r\n                </Link>\r\n              )} */}\r\n            </Box>\r\n          </StyledContainer>\r\n        </BackgroundGradient>\r\n      </BackgroundImgBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n\r\nconst BackgroundImgBox = styled(Box)`\r\n  && {\r\n    background-image: url(\"/static/login/background.webp\");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n`;\r\n\r\nconst BackgroundGradient = styled(Box)`\r\n  && {\r\n    background: linear-gradient(\r\n      57.19deg,\r\n      #282a37 34.14%,\r\n      rgba(41, 43, 56, 0) 238.39%\r\n    );\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  && {\r\n    margin-top: 201px;\r\n    margin-left: 112px;\r\n    padding: 0 0 0 0;\r\n  }\r\n`;\r\n\r\nconst LoginTitle = styled(Box)`\r\n  && {\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 3.125rem;\r\n    line-height: 75px;\r\n    letter-spacing: 0.5px;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled(Box)`\r\n  && {\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    line-height: 30px;\r\n    letter-spacing: 1.5px;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n"],"sourceRoot":""}