{"version":3,"sources":["icons/WorkspaceNotification.tsx","components/dashboard/route-list/Map.tsx","icons/ThreeDots.tsx","icons/RouteListView.tsx","icons/RouteListEdit.tsx","icons/RouteListDelete.tsx","utils/formatDate.tsx","components/dashboard/route-list/RouteListTable.tsx","icons/RouteListCross.tsx","utils/bytesToSize.ts","components/FileDropzone.tsx","components/FileDropzoneHistorical.tsx","icons/LocationStartingPt.tsx","icons/LocationFinishingPt.tsx","icons/LocationHistoricalEvent.tsx","icons/RouteListAddHistorical.tsx","icons/ExpandAccordion.tsx","components/dashboard/route-list/RouteCreateForm.tsx"],"names":["WorkspaceNotification","createSvgIcon","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","startingPt","finishingPt","histoEventPt","ThreeDots","RouteListView","rx","fill-rule","clip-rule","RouteListEdit","RouteListDelete","formatDate","date","Date","toLocaleString","month","day","year","replaceAll","sortOptions","label","value","icon","descendingComparator","a","b","orderBy","applySort","normalRoutes","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","newOrder","RouteListTable","props","navigate","useNavigate","other","useState","selectedNormalRoutes","setSelectedNormalRoutes","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","React","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","handleSelectAllNormalRoutes","target","checked","normalRoute","filteredNormalRoutes","filter","matches","containsQuery","console","log","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedNormalRoutes","slice","applyPagination","selectedSomeNormalRoutes","length","selectedAllNormalRoutes","StyledCard","Box","sx","alignItems","display","flexWrap","m","padding","ToolbarBox","TableTitleWrapper","TableTitle","ml","CreateNormalRouteButton","onClick","variant","disableElevation","Scrollbar","Table","TableHead","TableRow","HeaderCheckbox","StyledCheckbox","indeterminate","onChange","TableHeaderCell","align","TableBody","isNormalRouteselected","StyledTableRow","hover","selected","TableCellStyled","normalRouteId","prevSelected","GroupBox","CardMedia","mr","borderRadius","border","boxSizing","image","route_photo","Typography500","route_name","Typography400","created_date","start_point_long","start_point_lat","stop_point_long","stop_point_lat","IconButton","aria-describedby","StyledPopOver","onClose","anchorOrigin","vertical","horizontal","transformOrigin","option","OptionsBox","StyledOption","StyledTablePagination","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","position","HiddenCheckBox","color","styled","Card","Checkbox","Popover","TableCell","Typography","Button","TablePagination","Map","startPt","endPt","historicalEventPt","GoogleMapReactCore","bootstrapURLKeys","process","defaultCenter","address","lat","lng","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","Marker","draggable","addListener","getPosition","long","apiIsLoaded","options","scrollwheel","GoogleMapReact","RouteListCross","bytesToSize","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","FileDropzone","accept","files","disabled","maxFiles","getFilesFromEvent","maxSize","minSize","onDrop","noClick","noDrag","noDragEventsBubbling","noKeyboard","onRemove","onDropAccepted","onDropRejected","onFileDialogCancel","onRemoveAll","onUpload","preventDropOnDocument","useDropzone","getRootProps","getInputProps","isDragActive","borderColor","justifyContent","outline","p","backgroundColor","opacity","cursor","flexDirection","mb","size","ImgBoxError","ErrorMsg","TryAgainButton","mt","right","top","fontSize","src","URL","createObjectURL","alt","ImageSize","CaptionTypo","defaultProps","FileDropzoneHistorical","List","file","ListItem","path","LocationStartingPt","LocationFinishingPt","LocationHistoricalEvent","RouteListAddHistorical","ExpandAccordion","RouteCreateForm","b64files","setB64files","setFiles","b64historicalFiles","setB64historicalFiles","historicalFiles","setHistoricalFiles","routeId","setRouteId","historicalEvents","setHistoricalEvents","scrollRef","useRef","scrollToEvents","useLayoutEffect","current","scrollIntoView","scrollToHistoricalEvents","scrollToHistoricalForm","handleDrop","newFiles","prevFiles","find","f","reader","FileReader","readAsDataURL","onload","preview","data","result","handleRemove","_file","handleRemoveAll","handleHistoricalDrop","handleHistoricalRemove","handleHistoricalRemoveAll","handleAddHistorical","histoLong","histoLat","histoTitle","histoSubTitle","histoDescription","accessToken","sessionStorage","getItem","DATA","route_id","location_point_long","location_point_lat","clue_point_long","Number","clue_point_lat","clue_title","description","clue_img","type","video_url","ar_clue","CONFIG","headers","Authorization","axios","post","apiResponse","getHistoricalEvents","useCallback","get","useEffect","initialValues","images","startPtLong","startPtLat","endPtLong","endPtLat","raceTitle","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","resetForm","userId","user_id","success","toast","error","response","status","message","statusText","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","setFieldError","setFieldTouched","StyledForm","Grid","container","spacing","item","lg","md","xs","CardContent","RowBox","LegendBox","FlexiBox","LegendItem","FieldLabel","StyledTextField","autoComplete","fullWidth","helperText","placeholder","name","onBlur","e","StyledMultiTextField","multiline","rows","SaveButton","CircularProgress","FormHelperText","HistoricalBox","Title","OrangeBorder","AddHistoricalButton","ref","historical","StyledAccordion","square","AccordionSummary","pl","expandIcon","aria-controls","AccordionTitle","AccordionValue","AccordionDetails","pt","HistoricalMultiField","SaveChangesButton","ColumnBox","form","TextField","Accordion"],"mappings":"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","file":"static/js/1.81e8f1d0.chunk.js","sourcesContent":["import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst WorkspaceNotification = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 22 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M18 11V8C18 4.13401 14.866 1 11 1C7.13401 1 4 4.13401 4 8V11C4 14.3 1 15.1 1 17C1 18.7 4.9 20 11 20C17.1 20 21 18.7 21 17C21 15.1 18 14.3 18 11Z\"\r\n      stroke=\"#09110E\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M10.9995 22C9.98853 22 9.03853 21.966 8.14453 21.9C8.5357 23.1478 9.69187 23.997 10.9995 23.997C12.3072 23.997 13.4634 23.1478 13.8545 21.9C12.9605 21.966 12.0105 22 10.9995 22Z\"\r\n      fill=\"#09110E\"\r\n    />\r\n  </svg>,\r\n  \"WorkspaceNotification\"\r\n);\r\n\r\nexport default WorkspaceNotification;\r\n","import \"dotenv/config\";\r\nimport React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n// import { Box } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n// import StartingPtIcon from \"../../../icons/RouteListStartPt\";\r\n// import StartPtImg from \"/static/route-list/start-pt.png\";\r\n\r\n// const LocationPin = ({ text }) => (\r\n//   <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n//     <StartingPtIcon />\r\n//     <p>{text}</p>\r\n//   </Box>\r\n// );\r\nlet startingPt;\r\nlet finishingPt;\r\nlet histoEventPt;\r\nconst apiIsLoaded = (map, maps, startPt, endPt, historicalEventPt) => {\r\n  startingPt = new maps.Marker({\r\n    position: { lat: 54.06547503649533, lng: -128.64594232540892 },\r\n    icon: \"/static/route-list/start-pt.png\",\r\n    map,\r\n    draggable: true,\r\n  });\r\n\r\n  finishingPt = new maps.Marker({\r\n    position: { lat: 54.06459354113623, lng: -128.64242326718139 },\r\n    icon: \"/static/route-list/finish-pt.png\",\r\n    map,\r\n    draggable: true,\r\n  });\r\n\r\n  histoEventPt = new maps.Marker({\r\n    position: { lat: 54.06262899845068, lng: -128.64484798413085 },\r\n    icon: \"/static/route-list/event-pt.png\",\r\n    map,\r\n    draggable: true,\r\n  });\r\n\r\n  startingPt.addListener(\"dragend\", () => {\r\n    const lat = startingPt.getPosition().lat();\r\n    const long = startingPt.getPosition().lng();\r\n    startPt(lat, long);\r\n    console.log(\"Normal Route Start Pt: \", lat, long);\r\n  });\r\n\r\n  finishingPt.addListener(\"dragend\", () => {\r\n    const lat = finishingPt.getPosition().lat();\r\n    const long = finishingPt.getPosition().lng();\r\n    endPt(lat, long);\r\n    console.log(\"Normal Route End Pt: \", lat, long);\r\n  });\r\n\r\n  histoEventPt.addListener(\"dragend\", () => {\r\n    const lat = histoEventPt.getPosition().lat();\r\n    const long = histoEventPt.getPosition().lng();\r\n    historicalEventPt(lat, long);\r\n    console.log(\"Historical Event Pt \", lat, long);\r\n  });\r\n};\r\n\r\nconst Map = (props) => {\r\n  const { startPt, endPt, historicalEventPt } = props;\r\n  const location = {\r\n    address: \"7 Carlson St, Kitimat, BC V8C 1A9, Canada\",\r\n    lat: 54.06291864840513,\r\n    lng: -128.6423159788208,\r\n  };\r\n  // console.log(process.env.REACT_APP_GOOGLE_KEY);\r\n  return (\r\n    <GoogleMapReactCore\r\n      bootstrapURLKeys={{ key: `${process.env.REACT_APP_GOOGLE_KEY}` }}\r\n      defaultCenter={location}\r\n      defaultZoom={16}\r\n      yesIWantToUseGoogleMapApiInternals\r\n      onGoogleApiLoaded={({ map, maps }) =>\r\n        apiIsLoaded(map, maps, startPt, endPt, historicalEventPt)\r\n      }\r\n      options={{ scrollwheel: true }}\r\n    >\r\n      {/* <LocationPin\r\n        // @ts-ignore\r\n        lat={location.lat}\r\n        lng={location.lng}\r\n        text={location.address}\r\n      /> */}\r\n    </GoogleMapReactCore>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n\r\nconst GoogleMapReactCore = styled(GoogleMapReact)`\r\n  && {\r\n    & div .gm-style {\r\n      border-radius: 20px;\r\n    }\r\n    div.gm-bundled-control-on-bottom {\r\n      bottom: 300px !important;\r\n    }\r\n  }\r\n`;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst ThreeDots = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 6 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M2.99295 7.80488C4.18343 7.80488 5.13581 8.78049 5.13581 10C5.13581 11.2195 4.18343 12.1951 2.99295 12.1951C1.80248 12.1951 0.850098 11.2195 0.850098 10C0.850098 8.78049 1.80248 7.80488 2.99295 7.80488ZM0.850098 2.19512C0.850098 3.41463 1.80248 4.39024 2.99295 4.39024C4.18343 4.39024 5.13581 3.41463 5.13581 2.19512C5.13581 0.97561 4.18343 0 2.99295 0C1.80248 0 0.850098 0.97561 0.850098 2.19512ZM0.850098 17.8049C0.850098 19.0244 1.80248 20 2.99295 20C4.18343 20 5.13581 19.0244 5.13581 17.8049C5.13581 16.5854 4.18343 15.6098 2.99295 15.6098C1.80248 15.6098 0.850098 16.5854 0.850098 17.8049Z\"\r\n      fill=\"#FF7851\"\r\n    />\r\n  </svg>,\r\n  \"ThreeDots\"\r\n);\r\n\r\nexport default ThreeDots;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst RouteListView = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 35 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect width=\"35\" height=\"20.1765\" rx=\"10.0882\" fill=\"#FEAC71\" />\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M19.4613 10.3132C19.4613 11.6725 18.3589 12.7741 16.9996 12.7741C15.6403 12.7741 14.5387 11.6725 14.5387 10.3132C14.5387 8.95317 15.6403 7.85156 16.9996 7.85156C18.3589 7.85156 19.4613 8.95317 19.4613 10.3132Z\"\r\n      stroke=\"white\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M16.9985 15.9984C19.9631 15.9984 22.6747 13.8668 24.2013 10.3137C22.6747 6.7605 19.9631 4.62891 16.9985 4.62891H17.0016C14.037 4.62891 11.3254 6.7605 9.79871 10.3137C11.3254 13.8668 14.037 15.9984 17.0016 15.9984H16.9985Z\"\r\n      stroke=\"white\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>,\r\n  \"RouteListView\"\r\n);\r\n\r\nexport default RouteListView;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst RouteListEdit = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 35 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect width=\"35\" height=\"20.1765\" rx=\"10.0882\" fill=\"#062D62\" />\r\n    <path\r\n      d=\"M22.6569 4.34389C23.0318 4.71894 23.2424 5.22756 23.2424 5.75789C23.2424 6.28821 23.0318 6.79683 22.6569 7.17189L15.2699 14.5589C14.9495 14.879 14.5482 15.1061 14.1089 15.2159L11.8179 15.7889C11.7341 15.8098 11.6463 15.8087 11.563 15.7855C11.4798 15.7624 11.404 15.7182 11.3429 15.657C11.2819 15.5959 11.2378 15.52 11.2148 15.4367C11.1918 15.3535 11.1908 15.2657 11.2119 15.1819L11.7839 12.8919C11.8938 12.4521 12.1212 12.0504 12.4419 11.7299L19.8279 4.34389C20.0136 4.15808 20.2341 4.01069 20.4768 3.91013C20.7195 3.80957 20.9796 3.75781 21.2424 3.75781C21.5051 3.75781 21.7652 3.80957 22.0079 3.91013C22.2506 4.01069 22.4711 4.15808 22.6569 4.34389ZM19.1209 6.46389L13.1499 12.4379C12.9578 12.6302 12.8216 12.8711 12.7559 13.1349L12.3849 14.6179L13.8669 14.2469C14.1307 14.1808 14.3716 14.0443 14.5639 13.8519L20.5359 7.87989L19.1219 6.46589L19.1209 6.46389ZM20.5359 5.05089L19.8279 5.75789L21.2419 7.17189L21.9499 6.46489C22.132 6.27628 22.2328 6.02368 22.2305 5.76148C22.2283 5.49929 22.1231 5.24847 21.9377 5.06307C21.7523 4.87766 21.5015 4.77249 21.2393 4.77021C20.9771 4.76793 20.7245 4.86873 20.5359 5.05089Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>,\r\n  \"RouteListEdit\"\r\n);\r\n\r\nexport default RouteListEdit;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst RouteListDelete = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 35 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect width=\"35\" height=\"20.1765\" rx=\"10.0882\" fill=\"#FF2113\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M21.2403 8.19978C21.4984 8.22102 21.6909 8.44665 21.6703 8.70477C21.6665 8.74727 21.3278 12.9416 21.1328 14.701C21.0115 15.7928 20.2903 16.4572 19.2016 16.4772C18.3684 16.4916 17.5647 16.4997 16.7791 16.4997C15.9322 16.4997 15.1066 16.4903 14.2897 16.4735C13.2447 16.4528 12.5216 15.7753 12.4035 14.7053C12.2066 12.9304 11.8697 8.74665 11.8666 8.70477C11.8454 8.44665 12.0379 8.2204 12.296 8.19978C12.5504 8.1929 12.7804 8.37165 12.801 8.62915C12.803 8.65627 12.9407 10.3648 13.0908 12.0552L13.1209 12.3925C13.1965 13.2327 13.2731 14.0401 13.3354 14.6022C13.4022 15.2103 13.7304 15.5241 14.3091 15.536C15.8716 15.5691 17.4659 15.571 19.1847 15.5397C19.7997 15.5278 20.1322 15.2203 20.2009 14.5978C20.3947 12.8516 20.7322 8.67165 20.7359 8.62915C20.7565 8.37165 20.9847 8.19165 21.2403 8.19978ZM18.0908 4C18.6646 4 19.1689 4.38687 19.317 4.94124L19.4758 5.72936C19.5271 5.98772 19.7538 6.17639 20.0163 6.18054L22.0674 6.18061C22.3261 6.18061 22.5361 6.3906 22.5361 6.64935C22.5361 6.9081 22.3261 7.1181 22.0674 7.1181L20.0347 7.118C20.0315 7.11807 20.0283 7.1181 20.0252 7.1181L20.0099 7.11747L13.526 7.11802C13.5209 7.11807 13.5159 7.1181 13.5109 7.1181L13.5012 7.11747L11.4687 7.1181C11.21 7.1181 11 6.9081 11 6.64935C11 6.3906 11.21 6.18061 11.4687 6.18061L13.5194 6.17998L13.5825 6.17598C13.8177 6.14547 14.0131 5.96686 14.0608 5.72936L14.2127 4.96937C14.3671 4.38687 14.8715 4 15.4452 4H18.0908ZM18.0908 4.93749H15.4452C15.2952 4.93749 15.1633 5.03812 15.1252 5.18249L14.9796 5.91373C14.9611 6.00635 14.9341 6.09562 14.8996 6.18077H18.6366C18.602 6.09562 18.575 6.00635 18.5564 5.91373L18.4046 5.15374C18.3727 5.03812 18.2408 4.93749 18.0908 4.93749Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>,\r\n  \"RouteListDelete\"\r\n);\r\n\r\nexport default RouteListDelete;\r\n","const formatDate = (date: string) => {\r\n  const formattedDate = new Date(date)\r\n    .toLocaleString(\"en-US\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\",\r\n    })\r\n    .replaceAll(\"/\", \".\");\r\n  return formattedDate;\r\n};\r\n\r\nexport default formatDate;\r\n","import React, { useState } from \"react\";\r\nimport type { ChangeEvent, FC, MouseEvent } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { Link as RouterLink } from \"react-router-dom\";\r\n// import numeral from \"numeral\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  // Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Checkbox,\r\n  // InputAdornment,\r\n  Popover,\r\n  // Link,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  // TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport ThreeDotsIcon from \"../../../icons/ThreeDots\";\r\nimport ViewIcon from \"../../../icons/RouteListView\";\r\nimport EditIcon from \"../../../icons/RouteListEdit\";\r\nimport DeleteIcon from \"../../../icons/RouteListDelete\";\r\nimport type { NormalRoute } from \"../../../types/route-lists\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\n\r\ninterface RouteListTableProps {\r\n  // normalRoutes: NormalRoute[];\r\n  normalRoutes: NormalRoute[];\r\n}\r\n\r\ntype Sort = \"updatedAt|desc\" | \"updatedAt|asc\" | \"deleteAt|asc\";\r\n\r\ninterface SortOption {\r\n  value: Sort;\r\n  label: string;\r\n  icon: any;\r\n}\r\n\r\nconst sortOptions: SortOption[] = [\r\n  {\r\n    label: \"View\",\r\n    value: \"updatedAt|asc\",\r\n    icon: <ViewIcon />,\r\n  },\r\n  {\r\n    label: \"Edit\",\r\n    value: \"updatedAt|desc\",\r\n    icon: <EditIcon />,\r\n  },\r\n  {\r\n    label: \"Delete\",\r\n    value: \"deleteAt|asc\",\r\n    icon: <DeleteIcon />,\r\n  },\r\n];\r\n\r\nconst applyFilters = (\r\n  normalRoutes: any[],\r\n  query: string,\r\n  filters: any\r\n): NormalRoute[] =>\r\n  normalRoutes.filter((normalRoute) => {\r\n    let matches = true;\r\n\r\n    if (query) {\r\n      const properties = [\"route_name\"];\r\n      let containsQuery = false;\r\n\r\n      if (typeof query === \"string\") {\r\n        console.log(\"Query is string\");\r\n        properties.forEach((property) => {\r\n          //Query all Strings\r\n          if (\r\n            normalRoute[property].toLowerCase().includes(query.toLowerCase())\r\n          ) {\r\n            containsQuery = true;\r\n          }\r\n        });\r\n      }\r\n      // properties.forEach((property) => {\r\n      //   console.log(normalRoute[\"caseTitle\"]);\r\n      //   if (\r\n      //     normalRoute[property].toLowerCase().includes(query.toLowerCase())\r\n      //   ) {\r\n      //     containsQuery = true;\r\n      //   }\r\n      // });\r\n\r\n      if (!containsQuery) {\r\n        matches = false;\r\n      }\r\n    }\r\n\r\n    Object.keys(filters).forEach((key) => {\r\n      const value = filters[key];\r\n\r\n      if (value && normalRoute[key] !== value) {\r\n        matches = false;\r\n      }\r\n    });\r\n\r\n    return matches;\r\n  });\r\n\r\nconst applyPagination = (\r\n  normalRoutes: any[],\r\n  page: number,\r\n  limit: number\r\n): any[] => normalRoutes.slice(page * limit, page * limit + limit);\r\n\r\nconst descendingComparator = (a: any, b: any, orderBy: string): number => {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst getComparator = (order: \"asc\" | \"desc\", orderBy: string) =>\r\n  order === \"desc\"\r\n    ? (a: NormalRoute, b: NormalRoute) => descendingComparator(a, b, orderBy)\r\n    : (a: NormalRoute, b: NormalRoute) => -descendingComparator(a, b, orderBy);\r\n\r\nconst applySort = (normalRoutes: NormalRoute[], sort: Sort): NormalRoute[] => {\r\n  const [orderBy, order] = sort.split(\"|\") as [string, \"asc\" | \"desc\"];\r\n  const comparator = getComparator(order, orderBy);\r\n  const stabilizedThis = normalRoutes.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    // @ts-ignore\r\n    const newOrder = comparator(a[0], b[0]);\r\n\r\n    if (newOrder !== 0) {\r\n      return newOrder;\r\n    }\r\n\r\n    // @ts-ignore\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  // @ts-ignore\r\n  return stabilizedThis.map((el) => el[0]);\r\n};\r\n\r\nconst RouteListTable: FC<RouteListTableProps> = (props) => {\r\n  const navigate = useNavigate();\r\n  const { normalRoutes, ...other } = props;\r\n  const [selectedNormalRoutes, setSelectedNormalRoutes] = useState<string[]>(\r\n    []\r\n  );\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [\r\n    query,\r\n    // setQuery\r\n  ] = useState<string>(\"\");\r\n  const [\r\n    sort,\r\n    // setSort\r\n  ] = useState<Sort>(sortOptions[1].value);\r\n  const [filters] = useState<any>({\r\n    hasAcceptedMarketing: null,\r\n    isProspect: null,\r\n    isReturning: null,\r\n  });\r\n\r\n  const handleRedirectPath = () => {\r\n    navigate(\"/dashboard/route-list/new\");\r\n  };\r\n  // const handleQueryChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n  //   setQuery(event.target.value);\r\n  // };\r\n\r\n  // const handleSortChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n  //   setSort(event.target.value as Sort);\r\n  // };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  // const handleSortChange = (event: any): void => {\r\n  //   setSort(event.target.value as Sort);\r\n  //   setAnchorEl(null);\r\n  // };\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  const handleSelectAllNormalRoutes = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedNormalRoutes(\r\n      event.target.checked\r\n        ? normalRoutes.map((normalRoute) => normalRoute.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneNormalRoute = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    normalRouteId: string\r\n  ): void => {\r\n    if (!selectedNormalRoutes.includes(normalRouteId)) {\r\n      setSelectedNormalRoutes((prevSelected) => [\r\n        ...prevSelected,\r\n        normalRouteId,\r\n      ]);\r\n    } else {\r\n      setSelectedNormalRoutes((prevSelected) =>\r\n        prevSelected.filter((id) => id !== normalRouteId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (\r\n    event: MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const filteredNormalRoutes = applyFilters(normalRoutes, query, filters);\r\n  const sortedNormalRoutes = applySort(filteredNormalRoutes, sort);\r\n  const paginatedNormalRoutes = applyPagination(\r\n    sortedNormalRoutes,\r\n    page,\r\n    limit\r\n  );\r\n  // const enableBulkActions = selectedNormalRoutes.length > 0;\r\n  const selectedSomeNormalRoutes =\r\n    selectedNormalRoutes.length > 0 &&\r\n    selectedNormalRoutes.length < normalRoutes.length;\r\n  const selectedAllNormalRoutes =\r\n    selectedNormalRoutes.length === normalRoutes.length;\r\n\r\n  return (\r\n    <>\r\n      <StyledCard {...other}>\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            m: 0,\r\n            padding: \"33px 16px 13px 66px\",\r\n          }}\r\n        >\r\n          <ToolbarBox>\r\n            <TableTitleWrapper>\r\n              <TableTitle>Route Lists</TableTitle>\r\n            </TableTitleWrapper>\r\n            <Box sx={{ ml: \"auto\" }}>\r\n              <CreateNormalRouteButton\r\n                onClick={handleRedirectPath}\r\n                variant=\"contained\"\r\n                disableElevation\r\n              >\r\n                Create\r\n              </CreateNormalRouteButton>\r\n            </Box>\r\n          </ToolbarBox>\r\n        </Box>\r\n        <Scrollbar>\r\n          <Box>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <HeaderCheckbox padding=\"checkbox\">\r\n                    <StyledCheckbox\r\n                      checked={selectedAllNormalRoutes}\r\n                      indeterminate={selectedSomeNormalRoutes}\r\n                      onChange={handleSelectAllNormalRoutes}\r\n                    />\r\n                  </HeaderCheckbox>\r\n                  <TableHeaderCell sx={{ width: \"340px\" }}>\r\n                    NAME\r\n                  </TableHeaderCell>\r\n                  <TableHeaderCell sx={{ width: \"140px\" }}>\r\n                    DATE CREATED\r\n                  </TableHeaderCell>\r\n                  <TableHeaderCell sx={{ width: \"234px\" }}>\r\n                    STARTING POINT LONG/LAT\r\n                  </TableHeaderCell>\r\n                  <TableHeaderCell sx={{ width: \"166px\" }}>\r\n                    ENDPOINT LONG/LAT\r\n                  </TableHeaderCell>\r\n                  <TableHeaderCell\r\n                    align=\"left\"\r\n                    sx={{ width: \"161px\" }}\r\n                  ></TableHeaderCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {paginatedNormalRoutes.map((normalRoute) => {\r\n                  const isNormalRouteselected = selectedNormalRoutes.includes(\r\n                    normalRoute.id\r\n                  );\r\n\r\n                  return (\r\n                    <StyledTableRow\r\n                      hover\r\n                      key={normalRoute.id}\r\n                      selected={isNormalRouteselected}\r\n                    >\r\n                      <TableCellStyled>\r\n                        <StyledCheckbox\r\n                          sx={{ ml: \"20px\" }}\r\n                          checked={isNormalRouteselected}\r\n                          onChange={(event) =>\r\n                            handleSelectOneNormalRoute(event, normalRoute.id)\r\n                          }\r\n                          value={isNormalRouteselected}\r\n                        />\r\n                      </TableCellStyled>\r\n                      <TableCellStyled>\r\n                        <GroupBox>\r\n                          <CardMedia\r\n                            sx={{\r\n                              width: \"85px\",\r\n                              height: \"96.01px\",\r\n                              mr: \"26px\",\r\n                              borderRadius: \"20px\",\r\n                              border: \"0.2px solid rgba(0, 0, 0, 0.2)\",\r\n                              boxSizing: \"border-box\",\r\n                            }}\r\n                            image={normalRoute.route_photo}\r\n                          />\r\n                          <Typography500>{`${normalRoute.route_name}`}</Typography500>\r\n                        </GroupBox>\r\n                      </TableCellStyled>\r\n                      <TableCellStyled>\r\n                        <Typography400>\r\n                          {formatDate(normalRoute.created_date)}\r\n                        </Typography400>\r\n                      </TableCellStyled>\r\n                      <TableCellStyled>\r\n                        <Typography400>{`${normalRoute.start_point_long}/${normalRoute.start_point_lat}`}</Typography400>\r\n                      </TableCellStyled>\r\n                      <TableCellStyled>\r\n                        <Typography400>{`${normalRoute.stop_point_long}/${normalRoute.stop_point_lat}`}</Typography400>\r\n                      </TableCellStyled>\r\n                      <TableCellStyled align=\"right\">\r\n                        <Box>\r\n                          <IconButton\r\n                            aria-describedby={id}\r\n                            onClick={handleClick}\r\n                          >\r\n                            <ThreeDotsIcon />\r\n                          </IconButton>\r\n                          <StyledPopOver\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"center\",\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: \"top\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                          >\r\n                            {sortOptions.map((option) => (\r\n                              <OptionsBox key={option.value}>\r\n                                {option.icon}\r\n                                <StyledOption\r\n                                  // onClick={handleSortChange}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </StyledOption>\r\n                              </OptionsBox>\r\n                            ))}\r\n                          </StyledPopOver>\r\n                        </Box>\r\n                      </TableCellStyled>\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </Scrollbar>\r\n\r\n        <StyledTablePagination\r\n          component=\"div\"\r\n          count={filteredNormalRoutes.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[10, 30, 50]}\r\n        />\r\n      </StyledCard>\r\n      <Box sx={{ display: \"flex\", position: \"relative\" }}>\r\n        {/* <Box\r\n          sx={{\r\n            mt: \"23px\",\r\n            position: \"relative\",\r\n            marginLeft: \"auto\",\r\n            mr: \"89px\",\r\n            zIndex: 2,\r\n          }}\r\n        > */}\r\n        <HiddenCheckBox\r\n          checked={selectedAllNormalRoutes}\r\n          color=\"primary\"\r\n          indeterminate={selectedSomeNormalRoutes}\r\n          onChange={handleSelectAllNormalRoutes}\r\n        />\r\n        {/* </Box> */}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nRouteListTable.propTypes = {\r\n  normalRoutes: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RouteListTable;\r\n\r\nconst StyledCard = styled(Card)`\r\n  && {\r\n    box-shadow: none;\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledCheckbox = styled(Checkbox)`\r\n  && {\r\n    padding: 0;\r\n    color: rgba(255, 228, 220, 1);\r\n    &.Mui-checked {\r\n      color: #2955a0;\r\n    }\r\n    &.MuiCheckbox-indeterminate {\r\n      color: #2955a0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToolbarBox = styled(Box)`\r\n  && {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst TableTitleWrapper = styled(Box)`\r\n  && {\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst TableTitle = styled(Box)`\r\n  && {\r\n    font-family: \"Samsung Sharp Sans Bold\";\r\n    font-size: 1.875rem;\r\n    line-height: 38px;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nconst StyledTableRow = styled(TableRow)`\r\n  && {\r\n    &.Mui-selected {\r\n      background-color: rgba(41, 85, 160, 0.08);\r\n    }\r\n  }\r\n`;\r\n\r\nconst OptionsBox = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledPopOver = styled(Popover)`\r\n  && .MuiPopover-paper {\r\n    padding: 15px 4px 0 10px;\r\n    background: #ffffff;\r\n    border: 1px solid rgba(0, 0, 0, 0.05);\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nconst StyledOption = styled.option`\r\n  && {\r\n    cursor: pointer;\r\n    font-family: \"Poppins\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    padding: 9px 24px 9px 19px;\r\n    color: #09110e;\r\n    &:hover {\r\n      background: #e5e7eb;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HeaderCheckbox = styled(TableCell)`\r\n  && {\r\n    width: 66px;\r\n    height: 45px;\r\n    background-color: #ff7851;\r\n    padding-top: 13px;\r\n    padding-bottom: 12px;\r\n    padding-left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst TableHeaderCell = styled(TableCell)`\r\n  && {\r\n    background-color: #ff7851;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n    padding-left: 0;\r\n    font-family: \"Inter\";\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    line-height: 15px;\r\n    letter-spacing: 0.05em;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst TableCellStyled = styled(TableCell)`\r\n  && {\r\n    border-color: rgba(255, 120, 81, 1);\r\n    padding-top: 23px;\r\n    padding-bottom: 23px;\r\n    padding-left: 0;\r\n  }\r\n`;\r\n\r\nconst GroupBox = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Typography500 = styled(Typography)`\r\n  && {\r\n    font-family: \"Poppins\";\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    color: #000000;\r\n  }\r\n`;\r\nconst Typography400 = styled(Typography)`\r\n  && {\r\n    font-family: \"Poppins\";\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    color: #626262;\r\n  }\r\n`;\r\n\r\nconst CreateNormalRouteButton = styled(Button)`\r\n  && {\r\n    width: 76px;\r\n    height: 40px;\r\n    background-image: url(\"/static/route-list/create-btn.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-color: #00755e;\r\n    border-radius: 10px;\r\n    padding: 13px 15px 13px 16px;\r\n    font-family: \"Gilroy-Bold\";\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst StyledTablePagination = styled(TablePagination)`\r\n  && {\r\n    /* padding: 0 0 0 0; */\r\n    height: 43px;\r\n    background: #ff7851;\r\n    border-radius: 0px 0px 20px 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    & .css-1cnh8g5-MuiInputBase-root-MuiTablePagination-select {\r\n      /* background: red; */\r\n      /* margin-left: 0 !important; */\r\n      margin-right: 84px;\r\n    }\r\n    & .MuiTablePagination-toolbar {\r\n      min-height: 43px;\r\n      color: #ffffff;\r\n      & .Mui-disabled {\r\n        color: #ffffff;\r\n        opacity: 0.5;\r\n      }\r\n      & .MuiTablePagination-select {\r\n        padding-top: 4px;\r\n      }\r\n      & .MuiSelect-icon {\r\n        color: white;\r\n      }\r\n    }\r\n    & p {\r\n      font-family: \"Gilroy SemiBold\";\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      margin: 0 0 0 0;\r\n      color: #ffffff;\r\n    }\r\n    div.MuiTablePagination-select {\r\n      font-family: \"Gilroy SemiBold\";\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n      padding: 0 25px 0 0;\r\n      color: #ffffff;\r\n    }\r\n    div.MuiTablePagination-actions {\r\n      margin-left: 92.17px;\r\n    }\r\n    div.MuiTablePagination-actions button:nth-child(2) {\r\n      margin-left: 68.16px;\r\n      margin-right: 26.5px;\r\n      & svg {\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HiddenCheckBox = styled(Checkbox)`\r\n  && {\r\n    display: none;\r\n  }\r\n`;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst RouteListCross = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 31 31\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M8.04588 8.04592C3.92919 12.1626 3.92919 18.8374 8.04588 22.9541C12.1626 27.0708 18.8374 27.0708 22.954 22.9541C27.0707 18.8374 27.0707 12.1626 22.954 8.04592C18.8374 3.92923 12.1626 3.92923 8.04588 8.04592ZM18.8882 17.5329C19.0679 17.7127 19.1689 17.9564 19.1689 18.2106C19.1689 18.4647 19.0679 18.7085 18.8882 18.8882C18.7085 19.0679 18.4647 19.1689 18.2105 19.1689C17.9564 19.1689 17.7126 19.0679 17.5329 18.8882L15.5 16.8553L13.467 18.8882C13.2873 19.0679 13.0436 19.1689 12.7894 19.1689C12.5352 19.1689 12.2915 19.0679 12.1117 18.8882C11.932 18.7085 11.8311 18.4647 11.8311 18.2106C11.8311 17.9564 11.932 17.7127 12.1117 17.5329L14.1447 15.5L12.1117 13.4671C11.932 13.2873 11.8311 13.0436 11.8311 12.7894C11.8311 12.5353 11.932 12.2915 12.1117 12.1118C12.2915 11.9321 12.5352 11.8311 12.7894 11.8311C13.0436 11.8311 13.2873 11.9321 13.467 12.1118L15.5 14.1447L17.5329 12.1118C17.7126 11.9321 17.9564 11.8311 18.2105 11.8311C18.4647 11.8311 18.7085 11.9321 18.8882 12.1118C19.0679 12.2915 19.1689 12.5353 19.1689 12.7894C19.1689 13.0436 19.0679 13.2873 18.8882 13.4671L16.8553 15.5L18.8882 17.5329Z\"\r\n      fill=\"#FF3636\"\r\n    />\r\n  </svg>,\r\n  \"RouteListCross\"\r\n);\r\n\r\nexport default RouteListCross;\r\n","/* eslint-disable no-restricted-properties */\r\nconst bytesToSize = (bytes: number, decimals = 2): string => {\r\n  if (bytes === 0) {\r\n    return '0 Bytes';\r\n  }\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return `${parseFloat((\r\n    bytes / Math.pow(k, i)\r\n  ).toFixed(dm))} ${sizes[i]}`;\r\n};\r\n\r\nexport default bytesToSize;\r\n","import type { FC } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport type { DropzoneOptions } from \"react-dropzone\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport CrossIcon from \"../icons/RouteListCross\";\r\nimport bytesToSize from \"../utils/bytesToSize\";\r\n\r\ninterface FileDropzoneProps extends DropzoneOptions {\r\n  files?: any[];\r\n  onRemove?: (file: any) => void;\r\n  onRemoveAll?: () => void;\r\n  onUpload?: () => void;\r\n}\r\n\r\nconst FileDropzone: FC<FileDropzoneProps> = (props) => {\r\n  const {\r\n    accept,\r\n    disabled,\r\n    files,\r\n    getFilesFromEvent,\r\n    maxFiles,\r\n    maxSize,\r\n    minSize,\r\n    noClick,\r\n    noDrag,\r\n    noDragEventsBubbling,\r\n    noKeyboard,\r\n    onDrop,\r\n    onDropAccepted,\r\n    onDropRejected,\r\n    onFileDialogCancel,\r\n    onRemove,\r\n    onRemoveAll,\r\n    onUpload,\r\n    preventDropOnDocument,\r\n    ...other\r\n  } = props;\r\n  // I did not add the remaining props to avoid component complexity\r\n  // but you can simply add it if you need to.\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept,\r\n    maxFiles,\r\n    maxSize,\r\n    minSize,\r\n    onDrop,\r\n  });\r\n\r\n  return (\r\n    <div {...other}>\r\n      <Box\r\n        sx={{\r\n          alignItems: \"center\",\r\n          border: 0,\r\n          borderRadius: 1,\r\n          borderColor: \"divider\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          outline: \"none\",\r\n          p: 0,\r\n          ...(isDragActive && {\r\n            backgroundColor: \"action.active\",\r\n            opacity: 0.5,\r\n          }),\r\n          \"&:hover\": {\r\n            // backgroundColor: \"action.hover\",\r\n            cursor: `${files.length < 1 ? \"pointer\" : \"auto\"}`,\r\n            // opacity: 0.5,\r\n          },\r\n        }}\r\n        {...getRootProps()}\r\n      >\r\n        {files.length < 1 && <input {...getInputProps()} />}\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            mb: \"20px\",\r\n            \"& img\": {\r\n              width: 100,\r\n            },\r\n          }}\r\n        >\r\n          {files.length > 0 ? (\r\n            <Box sx={{ position: \"relative\" }}>\r\n              {files[0].size > 1000000 ? (\r\n                <ImgBoxError>\r\n                  <ErrorMsg>File must be 1MB size or less</ErrorMsg>\r\n                  <TryAgainButton\r\n                    sx={{ mt: 1 }}\r\n                    onClick={() => onRemove && onRemove(files[0])}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Try again\r\n                  </TryAgainButton>\r\n                </ImgBoxError>\r\n              ) : (\r\n                <>\r\n                  <IconButton\r\n                    sx={{ position: \"absolute\", right: \"-21px\", top: \"-20px\" }}\r\n                    onClick={() => onRemove && onRemove(files[0])}\r\n                  >\r\n                    <CrossIcon fontSize=\"medium\" />\r\n                  </IconButton>\r\n\r\n                  <img\r\n                    height=\"90px\"\r\n                    width=\"90px\"\r\n                    src={files.length > 0 ? URL.createObjectURL(files[0]) : \"\"}\r\n                    alt=\"sample\"\r\n                  />\r\n                  <ImageSize\r\n                    sx={{ position: \"absolute\", top: \"30px\", right: \"-80px\" }}\r\n                  >\r\n                    {bytesToSize(files[0].size)}\r\n                  </ImageSize>\r\n                </>\r\n              )}\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <img\r\n                width=\"53.92px\"\r\n                height=\"38.56px\"\r\n                alt=\"Select file\"\r\n                src=\"/static/add_file.svg\"\r\n              />\r\n              <CaptionTypo>Attach images of thumbnail</CaptionTypo>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nFileDropzone.propTypes = {\r\n  accept: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]),\r\n  disabled: PropTypes.bool,\r\n  files: PropTypes.array,\r\n  getFilesFromEvent: PropTypes.func,\r\n  maxFiles: PropTypes.number,\r\n  maxSize: PropTypes.number,\r\n  minSize: PropTypes.number,\r\n  noClick: PropTypes.bool,\r\n  noDrag: PropTypes.bool,\r\n  noDragEventsBubbling: PropTypes.bool,\r\n  noKeyboard: PropTypes.bool,\r\n  onDrop: PropTypes.func,\r\n  onDropAccepted: PropTypes.func,\r\n  onDropRejected: PropTypes.func,\r\n  onFileDialogCancel: PropTypes.func,\r\n  onRemove: PropTypes.func,\r\n  onRemoveAll: PropTypes.func,\r\n  onUpload: PropTypes.func,\r\n  preventDropOnDocument: PropTypes.bool,\r\n};\r\n\r\nFileDropzone.defaultProps = {\r\n  files: [],\r\n};\r\n\r\nexport default FileDropzone;\r\n\r\nconst CaptionTypo = styled(Box)`\r\n  && {\r\n    margin-top: 15.45px;\r\n    font-family: \"Gilroy Light\";\r\n    font-weight: bold;\r\n    font-size: 0.875rem;\r\n    line-height: 16px;\r\n    letter-spacing: 0.5px;\r\n    color: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst ImageSize = styled(Box)`\r\n  && {\r\n    font-family: \"Gilroy\";\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 27px;\r\n    color: #000000;\r\n    opacity: 0.4;\r\n  }\r\n`;\r\n\r\nconst ImgBoxError = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst ErrorMsg = styled(Box)`\r\n  && {\r\n    font-family: \"Gilroy\";\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    letter-spacing: 0.5px;\r\n    color: #f44336;\r\n  }\r\n`;\r\n\r\nconst TryAgainButton = styled(Button)`\r\n  && {\r\n    color: #f44336;\r\n    border-color: #f44336;\r\n  }\r\n`;\r\n","import type { FC } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport type { DropzoneOptions } from \"react-dropzone\";\r\nimport {\r\n  Box,\r\n  // Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  // ListItemIcon,\r\n  // ListItemText,\r\n  // Tooltip,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n// import DuplicateIcon from \"../icons/Duplicate\";\r\nimport CrossIcon from \"../icons/RouteListCross\";\r\n// import XIcon from \"../icons/X\";\r\n// import bytesToSize from \"../utils/bytesToSize\";\r\n\r\ninterface FileDropzoneHistoricalProps extends DropzoneOptions {\r\n  files?: any[];\r\n  onRemove?: (file: any) => void;\r\n  onRemoveAll?: () => void;\r\n  onUpload?: () => void;\r\n}\r\n\r\nconst FileDropzoneHistorical: FC<FileDropzoneHistoricalProps> = (props) => {\r\n  const {\r\n    accept,\r\n    disabled,\r\n    files,\r\n    getFilesFromEvent,\r\n    maxFiles,\r\n    maxSize,\r\n    minSize,\r\n    noClick,\r\n    noDrag,\r\n    noDragEventsBubbling,\r\n    noKeyboard,\r\n    onDrop,\r\n    onDropAccepted,\r\n    onDropRejected,\r\n    onFileDialogCancel,\r\n    onRemove,\r\n    onRemoveAll,\r\n    onUpload,\r\n    preventDropOnDocument,\r\n    ...other\r\n  } = props;\r\n\r\n  // We did not add the remaining props to avoid component complexity\r\n  // but you can simply add it if you need to.\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept,\r\n    maxFiles,\r\n    maxSize,\r\n    minSize,\r\n    onDrop,\r\n  });\r\n\r\n  return (\r\n    <Box {...other} sx={{ ml: \"auto\" }}>\r\n      <Box\r\n        sx={{\r\n          mr: \"30px\",\r\n          alignItems: \"center\",\r\n          border: 0,\r\n          borderRadius: 1,\r\n          borderColor: \"divider\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          outline: \"none\",\r\n          p: 0,\r\n          ...(isDragActive && {\r\n            backgroundColor: \"action.active\",\r\n            opacity: 0.5,\r\n          }),\r\n          \"&:hover\": {\r\n            // backgroundColor: \"action.hover\",\r\n            cursor: \"pointer\",\r\n            // opacity: 0.5,\r\n          },\r\n        }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            mb: \"20px\",\r\n            \"& img\": {\r\n              width: 100,\r\n            },\r\n          }}\r\n        >\r\n          <img\r\n            width=\"53.92px\"\r\n            height=\"38.56px\"\r\n            alt=\"Select file\"\r\n            src=\"/static/add_file.svg\"\r\n          />\r\n          <CaptionTypo>Attach images</CaptionTypo>\r\n        </Box>\r\n        {/* <Box sx={{ p: 2 }}>\r\n          <Typography color=\"textPrimary\" variant=\"h6\">\r\n            {`Select file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}\r\n          </Typography>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography color=\"textPrimary\" variant=\"body1\">\r\n              {`Drop file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}{\" \"}\r\n              <Link color=\"primary\" underline=\"always\">\r\n                browse\r\n              </Link>{\" \"}\r\n              through your machine\r\n            </Typography>\r\n          </Box>\r\n        </Box> */}\r\n      </Box>\r\n\r\n      <Box>\r\n        <List>\r\n          {files.map((file) => (\r\n            <ListItem key={file.path} sx={{ position: \"relative\" }}>\r\n              <IconButton\r\n                sx={{ position: \"absolute\", right: \"23px\", top: \"-15px\" }}\r\n                onClick={() => onRemove && onRemove(file)}\r\n              >\r\n                <CrossIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n              <img\r\n                height=\"157.17px\"\r\n                width=\"234\"\r\n                src={URL.createObjectURL(file)}\r\n                alt=\"sample\"\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      {/* {files.length > 0 && (\r\n        <Box>\r\n          <List>\r\n            {files.map((file) => (\r\n              <ListItem\r\n                key={file.path}\r\n                sx={{\r\n                  border: 1,\r\n                  borderColor: \"divider\",\r\n                  borderRadius: 1,\r\n                  \"& + &\": {\r\n                    mt: 1,\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <DuplicateIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={file.name}\r\n                  primaryTypographyProps={{\r\n                    color: \"textPrimary\",\r\n                    variant: \"subtitle2\",\r\n                  }}\r\n                  secondary={bytesToSize(file.size)}\r\n                />\r\n                <Tooltip title=\"Remove\">\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    onClick={() => onRemove && onRemove(file)}\r\n                  >\r\n                    <XIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              mt: 2,\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={onRemoveAll}\r\n              size=\"small\"\r\n              type=\"button\"\r\n              variant=\"text\"\r\n            >\r\n              Remove All\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={onUpload}\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )} */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nFileDropzoneHistorical.propTypes = {\r\n  accept: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]),\r\n  disabled: PropTypes.bool,\r\n  files: PropTypes.array,\r\n  getFilesFromEvent: PropTypes.func,\r\n  maxFiles: PropTypes.number,\r\n  maxSize: PropTypes.number,\r\n  minSize: PropTypes.number,\r\n  noClick: PropTypes.bool,\r\n  noDrag: PropTypes.bool,\r\n  noDragEventsBubbling: PropTypes.bool,\r\n  noKeyboard: PropTypes.bool,\r\n  onDrop: PropTypes.func,\r\n  onDropAccepted: PropTypes.func,\r\n  onDropRejected: PropTypes.func,\r\n  onFileDialogCancel: PropTypes.func,\r\n  onRemove: PropTypes.func,\r\n  onRemoveAll: PropTypes.func,\r\n  onUpload: PropTypes.func,\r\n  preventDropOnDocument: PropTypes.bool,\r\n};\r\n\r\nFileDropzoneHistorical.defaultProps = {\r\n  files: [],\r\n};\r\n\r\nexport default FileDropzoneHistorical;\r\n\r\nconst CaptionTypo = styled(Box)`\r\n  && {\r\n    margin-top: 15.45px;\r\n    font-family: \"Gilroy Light\";\r\n    font-weight: bold;\r\n    font-size: 0.875rem;\r\n    line-height: 16px;\r\n    letter-spacing: 0.5px;\r\n    color: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst LocationStartingPt = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 -2 12 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M6 0.667969C7.5913 0.667969 9.11742 1.30011 10.2426 2.42533C11.3679 3.55055 12 5.07667 12 6.66797C12 9.15197 10.1067 11.7546 6.4 14.5346C6.2846 14.6212 6.14425 14.668 6 14.668C5.85575 14.668 5.7154 14.6212 5.6 14.5346C1.89333 11.7546 0 9.15197 0 6.66797C0 5.07667 0.632141 3.55055 1.75736 2.42533C2.88258 1.30011 4.4087 0.667969 6 0.667969ZM6 4.66797C5.46957 4.66797 4.96086 4.87868 4.58579 5.25376C4.21071 5.62883 4 6.13754 4 6.66797C4 7.1984 4.21071 7.70711 4.58579 8.08218C4.96086 8.45726 5.46957 8.66797 6 8.66797C6.53043 8.66797 7.03914 8.45726 7.41421 8.08218C7.78929 7.70711 8 7.1984 8 6.66797C8 6.13754 7.78929 5.62883 7.41421 5.25376C7.03914 4.87868 6.53043 4.66797 6 4.66797Z\"\r\n      fill=\"#1D140C\"\r\n    />\r\n  </svg>,\r\n  \"LocationStartingPt\"\r\n);\r\n\r\nexport default LocationStartingPt;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst LocationFinishingPt = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 -2 12 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M6 0.667969C7.5913 0.667969 9.11742 1.30011 10.2426 2.42533C11.3679 3.55055 12 5.07667 12 6.66797C12 9.15197 10.1067 11.7546 6.4 14.5346C6.2846 14.6212 6.14425 14.668 6 14.668C5.85575 14.668 5.7154 14.6212 5.6 14.5346C1.89333 11.7546 0 9.15197 0 6.66797C0 5.07667 0.632141 3.55055 1.75736 2.42533C2.88258 1.30011 4.4087 0.667969 6 0.667969ZM6 4.66797C5.46957 4.66797 4.96086 4.87868 4.58579 5.25376C4.21071 5.62883 4 6.13754 4 6.66797C4 7.1984 4.21071 7.70711 4.58579 8.08218C4.96086 8.45726 5.46957 8.66797 6 8.66797C6.53043 8.66797 7.03914 8.45726 7.41421 8.08218C7.78929 7.70711 8 7.1984 8 6.66797C8 6.13754 7.78929 5.62883 7.41421 5.25376C7.03914 4.87868 6.53043 4.66797 6 4.66797Z\"\r\n      fill=\"#FF0000\"\r\n    />\r\n  </svg>,\r\n  \"LocationFinishingPt\"\r\n);\r\n\r\nexport default LocationFinishingPt;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst LocationHistoricalEvent = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 -2 12 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M6 0.667969C7.5913 0.667969 9.11742 1.30011 10.2426 2.42533C11.3679 3.55055 12 5.07667 12 6.66797C12 9.15197 10.1067 11.7546 6.4 14.5346C6.2846 14.6212 6.14425 14.668 6 14.668C5.85575 14.668 5.7154 14.6212 5.6 14.5346C1.89333 11.7546 0 9.15197 0 6.66797C0 5.07667 0.632141 3.55055 1.75736 2.42533C2.88258 1.30011 4.4087 0.667969 6 0.667969ZM6 4.66797C5.46957 4.66797 4.96086 4.87868 4.58579 5.25376C4.21071 5.62883 4 6.13754 4 6.66797C4 7.1984 4.21071 7.70711 4.58579 8.08218C4.96086 8.45726 5.46957 8.66797 6 8.66797C6.53043 8.66797 7.03914 8.45726 7.41421 8.08218C7.78929 7.70711 8 7.1984 8 6.66797C8 6.13754 7.78929 5.62883 7.41421 5.25376C7.03914 4.87868 6.53043 4.66797 6 4.66797Z\"\r\n      fill=\"#FFF500\"\r\n    />\r\n  </svg>,\r\n  \"LocationHistoricalEvent\"\r\n);\r\n\r\nexport default LocationHistoricalEvent;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst RouteListAddHistorical = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 -3 14 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M7 0C6.51675 0 6.125 0.391751 6.125 0.875V6.125H0.875C0.391751 6.125 0 6.51675 0 7C0 7.48325 0.391751 7.875 0.875 7.875H6.125V13.125C6.125 13.6082 6.51675 14 7 14C7.48325 14 7.875 13.6082 7.875 13.125V7.875H13.125C13.6082 7.875 14 7.48325 14 7C14 6.51675 13.6082 6.125 13.125 6.125H7.875V0.875C7.875 0.391751 7.48325 0 7 0Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>,\r\n  \"RouteListAddHistorical\"\r\n);\r\n\r\nexport default RouteListAddHistorical;\r\n","import createSvgIcon from \"@material-ui/core/utils/createSvgIcon\";\r\n\r\nconst ExpandAccordion = createSvgIcon(\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 23 13\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M11.5 13L0.674683 0.25L22.3253 0.249998L11.5 13Z\" fill=\"#C4C4C4\" />\r\n  </svg>,\r\n  \"ExpandAccordion\"\r\n);\r\n\r\nexport default ExpandAccordion;\r\n","import {\r\n  useState,\r\n  useCallback,\r\n  useLayoutEffect,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport type { FC } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport Map from \"./Map\";\r\nimport FileDropzone from \"../../FileDropzone\";\r\nimport FileDropzoneHistorical from \"../../FileDropzoneHistorical\";\r\nimport StartingPtIcon from \"../../../icons/LocationStartingPt\";\r\nimport FinishingPtIcon from \"../../../icons/LocationFinishingPt\";\r\nimport HistoricalEventIcon from \"../../../icons/LocationHistoricalEvent\";\r\nimport AddHistoricalIcon from \"../../../icons/RouteListAddHistorical\";\r\nimport ExpandMoreIcon from \"../../../icons/ExpandAccordion\";\r\n\r\nconst RouteCreateForm: FC = (props) => {\r\n  // const navigate = useNavigate();\r\n  const [b64files, setB64files] = useState<any>(\"\");\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [b64historicalFiles, setB64historicalFiles] = useState<any>(\"\");\r\n  const [historicalFiles, setHistoricalFiles] = useState<any[]>([]);\r\n  const [routeId, setRouteId] = useState<string>(\"\");\r\n  const [historicalEvents, setHistoricalEvents] = useState([]);\r\n  const scrollRef = useRef<HTMLSpanElement>();\r\n  const scrollToEvents = useRef<HTMLSpanElement>();\r\n\r\n  useLayoutEffect(() => {\r\n    if (scrollRef?.current) {\r\n      scrollRef.current.scrollIntoView();\r\n    }\r\n  }, []);\r\n\r\n  const scrollToHistoricalEvents = () => {\r\n    scrollToEvents.current.scrollIntoView();\r\n  };\r\n\r\n  const scrollToHistoricalForm = () => {\r\n    scrollRef.current.scrollIntoView();\r\n  };\r\n\r\n  const handleDrop = (newFiles: any): void => {\r\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\r\n    const file = newFiles.find((f) => f);\r\n    console.log(file);\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(\"OBJ SRC & DATA \", {\r\n        src: file.preview,\r\n        data: reader.result,\r\n      });\r\n      setB64files(reader.result);\r\n    };\r\n  };\r\n\r\n  if (files.length > 0) {\r\n    console.log(\"Base 64 \", b64files);\r\n  }\r\n\r\n  const handleRemove = (file): void => {\r\n    setFiles((prevFiles) =>\r\n      prevFiles.filter((_file) => _file.path !== file.path)\r\n    );\r\n  };\r\n\r\n  const handleRemoveAll = (): void => {\r\n    setFiles([]);\r\n  };\r\n\r\n  const handleHistoricalDrop = (newFiles: any): void => {\r\n    setHistoricalFiles((prevFiles) => [...prevFiles, ...newFiles]);\r\n    const file = newFiles.find((f) => f);\r\n    console.log(\"Historical Img Drop \", file);\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(\"OBJ SRC & DATA \", {\r\n        src: file.preview,\r\n        data: reader.result,\r\n      });\r\n      setB64historicalFiles(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleHistoricalRemove = (file): void => {\r\n    setHistoricalFiles((prevFiles) =>\r\n      prevFiles.filter((_file) => _file.path !== file.path)\r\n    );\r\n  };\r\n\r\n  const handleHistoricalRemoveAll = (): void => {\r\n    setHistoricalFiles([]);\r\n  };\r\n\r\n  const handleAddHistorical = async (\r\n    histoLong,\r\n    histoLat,\r\n    histoTitle,\r\n    histoSubTitle,\r\n    histoDescription\r\n  ) => {\r\n    console.log(\"Add Historical route_id\", routeId);\r\n    const accessToken = sessionStorage.getItem(\"token\");\r\n    const URL = `${process.env.REACT_APP_BACKEND_URL}/api/v1/route-clues`;\r\n    const DATA = {\r\n      route_id: routeId,\r\n      location_point_long: 32.4832,\r\n      location_point_lat: 32.4832,\r\n      clue_point_long: Number(histoLong),\r\n      clue_point_lat: Number(histoLat),\r\n      clue_title: histoTitle,\r\n      description: histoDescription,\r\n      clue_img: {\r\n        type: \"Buffer\",\r\n        data: [b64historicalFiles],\r\n      },\r\n      video_url: \"video\",\r\n      ar_clue: \"augmented reality\",\r\n    };\r\n    const CONFIG = {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const apiResponse = await axios.post(URL, DATA, CONFIG);\r\n    console.log(\"Add Historical Event response: \", apiResponse);\r\n    getHistoricalEvents();\r\n    scrollToHistoricalEvents();\r\n    setHistoricalFiles([]);\r\n    setB64historicalFiles(\"\");\r\n  };\r\n\r\n  const getHistoricalEvents = useCallback(async () => {\r\n    console.log(\"Get Historical Events by ID loaded: \", routeId);\r\n    const accessToken = sessionStorage.getItem(\"token\");\r\n    const URL = `${process.env.REACT_APP_BACKEND_URL}/api/v1/route-clues/all-clues/${routeId}`;\r\n    const CONFIG = {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n    const apiResponse = await axios.get(URL, CONFIG);\r\n    console.log(\"GET Historical Events\", apiResponse.data);\r\n    setHistoricalEvents(apiResponse.data);\r\n  }, [routeId]);\r\n\r\n  useEffect(() => {\r\n    if (routeId) {\r\n      getHistoricalEvents();\r\n    }\r\n  }, [routeId, getHistoricalEvents]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        images: [],\r\n        startPtLong: \"\",\r\n        startPtLat: \"\",\r\n        endPtLong: \"\",\r\n        endPtLat: \"\",\r\n        raceTitle: \"\",\r\n        description: \"\",\r\n        histoLong: \"\",\r\n        histoLat: \"\",\r\n        histoTitle: \"\",\r\n        histoSubTitle: \"\",\r\n        histoDescription: \"\",\r\n        submit: null,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        images: Yup.array(),\r\n        startPtLong: Yup.string().max(80).required(),\r\n        startPtLat: Yup.string().max(80).required(),\r\n        endPtLong: Yup.string().max(80).required(),\r\n        endPtLat: Yup.string().max(80).required(),\r\n        raceTitle: Yup.string().max(80).required(),\r\n        description: Yup.string().max(255).required(),\r\n        histoLong: Yup.string().max(80),\r\n        histoLat: Yup.string().max(80),\r\n        histoTitle: Yup.string().max(80),\r\n        histoSubTitle: Yup.string().max(80),\r\n        histoDescription: Yup.string().max(80),\r\n      })}\r\n      onSubmit={async (\r\n        values,\r\n        { setErrors, setStatus, setSubmitting, resetForm }\r\n      ): Promise<void> => {\r\n        try {\r\n          // NOTE: Make API request\r\n          const accessToken = sessionStorage.getItem(\"token\");\r\n          const userId = sessionStorage.getItem(\"user_id\");\r\n          const URL = `${process.env.REACT_APP_BACKEND_URL}/api/v1/route`;\r\n          const DATA = {\r\n            user_id: userId,\r\n            route_name: values.raceTitle,\r\n            route_photo: b64files,\r\n            start_point_long: values.startPtLong,\r\n            start_point_lat: values.startPtLat,\r\n            stop_point_long: values.endPtLong,\r\n            stop_point_lat: values.endPtLat,\r\n          };\r\n          const CONFIG = {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          };\r\n          const apiResponse = await axios.post(URL, DATA, CONFIG);\r\n          console.log(apiResponse.data.id);\r\n          setRouteId(apiResponse.data.id);\r\n\r\n          setStatus({ success: true });\r\n          resetForm();\r\n          setFiles([]);\r\n          setHistoricalFiles([]);\r\n          setB64files(\"\");\r\n          setSubmitting(false);\r\n          toast.success(\"Route created!\");\r\n        } catch (err) {\r\n          console.error(err);\r\n          if (err.response.status === 413) {\r\n            err.message = `Image ${err.response.statusText} (${err.response.status})`;\r\n          }\r\n          if (err.response.status === 500) {\r\n            err.message = `${err.response.statusText} (${err.response.status})`;\r\n          }\r\n\r\n          toast.error(\"Something went wrong!\");\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n        setFieldError,\r\n        setFieldTouched,\r\n        touched,\r\n        values,\r\n      }): JSX.Element => (\r\n        <StyledForm onSubmit={handleSubmit} {...props}>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} md={6} xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <RowBox>\r\n                    <Box sx={{ width: \"293px\", mr: \"18px\" }}>\r\n                      <LegendBox>\r\n                        <FlexiBox sx={{ mb: \"17px\" }}>\r\n                          <StartingPtIcon fontSize=\"small\" />\r\n                          <LegendItem>Starting Point</LegendItem>\r\n                        </FlexiBox>\r\n                        <FlexiBox sx={{ mb: \"17px\" }}>\r\n                          <FinishingPtIcon fontSize=\"small\" />\r\n                          <LegendItem>Finishing Point</LegendItem>\r\n                        </FlexiBox>\r\n                        <FlexiBox>\r\n                          <HistoricalEventIcon fontSize=\"small\" />\r\n                          <LegendItem>Historical Event</LegendItem>\r\n                        </FlexiBox>\r\n                      </LegendBox>\r\n                      <FieldLabel>Starting Point</FieldLabel>\r\n                      <StyledTextField\r\n                        autoComplete=\"off\"\r\n                        error={Boolean(\r\n                          touched.startPtLong && errors.startPtLong\r\n                        )}\r\n                        fullWidth\r\n                        helperText={touched.startPtLong && errors.startPtLong}\r\n                        placeholder=\"Longitude\"\r\n                        name=\"startPtLong\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.startPtLong}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <StyledTextField\r\n                        autoComplete=\"off\"\r\n                        sx={{ mt: \"0 !important\" }}\r\n                        error={Boolean(touched.startPtLat && errors.startPtLat)}\r\n                        fullWidth\r\n                        helperText={touched.startPtLat && errors.startPtLat}\r\n                        placeholder=\"Latitude\"\r\n                        name=\"startPtLat\"\r\n                        onBlur={handleBlur}\r\n                        onChange={(e) => {\r\n                          handleChange(e);\r\n                          console.log(\"Text Field Value\", values.startPtLat);\r\n                        }}\r\n                        value={values.startPtLat}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <FieldLabel>End Point</FieldLabel>\r\n                      <StyledTextField\r\n                        autoComplete=\"off\"\r\n                        error={Boolean(touched.endPtLong && errors.endPtLong)}\r\n                        fullWidth\r\n                        helperText={touched.endPtLong && errors.endPtLong}\r\n                        placeholder=\"Longitude\"\r\n                        name=\"endPtLong\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.endPtLong}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <StyledTextField\r\n                        autoComplete=\"off\"\r\n                        sx={{ mt: \"0 !important\" }}\r\n                        error={Boolean(touched.endPtLat && errors.endPtLat)}\r\n                        fullWidth\r\n                        helperText={touched.endPtLat && errors.endPtLat}\r\n                        placeholder=\"Latitude\"\r\n                        name=\"endPtLat\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.endPtLat}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <Box sx={{ width: \"289px\", height: \"89.98px\" }}>\r\n                        <FileDropzone\r\n                          accept={[\"image/png\", \".jpg\", \"image/gif\"]}\r\n                          maxFiles={1}\r\n                          files={files}\r\n                          onDrop={handleDrop}\r\n                          onRemove={handleRemove}\r\n                          onRemoveAll={handleRemoveAll}\r\n                        />\r\n                      </Box>\r\n                      <FieldLabel>Title</FieldLabel>\r\n                      <StyledTextField\r\n                        autoComplete=\"off\"\r\n                        error={Boolean(touched.raceTitle && errors.raceTitle)}\r\n                        fullWidth\r\n                        helperText={touched.raceTitle && errors.raceTitle}\r\n                        placeholder=\"My race title\"\r\n                        name=\"raceTitle\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.raceTitle}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <FieldLabel>Description</FieldLabel>\r\n                      <StyledMultiTextField\r\n                        autoComplete=\"off\"\r\n                        error={Boolean(\r\n                          touched.description && errors.description\r\n                        )}\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        helperText={touched.description && errors.description}\r\n                        placeholder=\"Write something here...\"\r\n                        name=\"description\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.description}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <Box\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          mt: \"16px\",\r\n                        }}\r\n                      >\r\n                        <SaveButton\r\n                          disabled={isSubmitting}\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          {isSubmitting ? (\r\n                            <>\r\n                              <CircularProgress\r\n                                sx={{\r\n                                  color: \"#FBF1DA\",\r\n                                  position: \"absolute\",\r\n                                  right: \"60px\",\r\n                                }}\r\n                              />\r\n                              Saving\r\n                            </>\r\n                          ) : (\r\n                            \"Save\"\r\n                          )}\r\n                        </SaveButton>\r\n                      </Box>\r\n                      {errors.submit && (\r\n                        <Box sx={{ mt: 3, position: \"relative\" }}>\r\n                          <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        height: \"982px\",\r\n                        width: \"100%\",\r\n                        borderRadius: \"20px\",\r\n                      }}\r\n                    >\r\n                      <Map\r\n                        startPt={(lat, long) => {\r\n                          console.log(\"StartPt props\", lat, long);\r\n                          setFieldValue(\"startPtLat\", lat.toFixed(4));\r\n                          setFieldValue(\"startPtLong\", long.toFixed(4));\r\n                        }}\r\n                        endPt={(lat, long) => {\r\n                          console.log(\"EndPt props\", lat, long);\r\n                          setFieldValue(\"endPtLat\", lat.toFixed(4));\r\n                          setFieldValue(\"endPtLong\", long.toFixed(4));\r\n                        }}\r\n                        historicalEventPt={(lat, long) => {\r\n                          console.log(\"Event Pt props\", lat, long);\r\n                          setFieldValue(\"histoLat\", lat.toFixed(4));\r\n                          setFieldValue(\"histoLong\", long.toFixed(4));\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </RowBox>\r\n                  {/* -----------------------------HISTORICAL------------------------------------- */}\r\n\r\n                  <HistoricalBox>\r\n                    <ToolbarBox>\r\n                      <Title sx={{ cursor: \"pointer\" }}>Historical</Title>\r\n                      <OrangeBorder></OrangeBorder>\r\n                      <Box\r\n                        sx={{ ml: \"auto\" }}\r\n                        onClick={scrollToHistoricalEvents}\r\n                      >\r\n                        <Button\r\n                          sx={{ color: \"#0E5753\", borderColor: \"#0E5753\" }}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          🔺 Scroll to Events\r\n                        </Button>\r\n                      </Box>\r\n                      <Box sx={{ ml: \"20px\" }} onClick={scrollToHistoricalForm}>\r\n                        <Button\r\n                          sx={{ color: \"#0E5753\", borderColor: \"#0E5753\" }}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          🔻 Scroll to Form\r\n                        </Button>\r\n                      </Box>\r\n                      <Box sx={{ ml: \"auto\", mb: \"20px\" }}>\r\n                        <AddHistoricalButton\r\n                          sx={{\r\n                            opacity: `${\r\n                              values.histoLong &&\r\n                              values.histoLat &&\r\n                              values.histoTitle &&\r\n                              values.histoSubTitle &&\r\n                              values.histoDescription\r\n                                ? 1\r\n                                : \"0.2\"\r\n                            }`,\r\n                          }}\r\n                          disabled={\r\n                            values.histoLong &&\r\n                            values.histoLat &&\r\n                            values.histoTitle &&\r\n                            values.histoSubTitle &&\r\n                            values.histoDescription\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          variant=\"contained\"\r\n                          onClick={() => {\r\n                            if (\r\n                              !values.histoLong ||\r\n                              !values.histoLat ||\r\n                              !values.histoTitle ||\r\n                              !values.histoSubTitle ||\r\n                              !values.histoDescription\r\n                            ) {\r\n                              console.log(\"No values added\");\r\n                            } else {\r\n                              handleAddHistorical(\r\n                                values.histoLong,\r\n                                values.histoLat,\r\n                                values.histoTitle,\r\n                                values.histoSubTitle,\r\n                                values.histoDescription\r\n                              );\r\n                            }\r\n\r\n                            setFieldValue(\"histoLong\", \"\");\r\n                            setFieldValue(\"histoLat\", \"\");\r\n                            setFieldValue(\"histoTitle\", \"\");\r\n                            setFieldValue(\"histoSubTitle\", \"\");\r\n                            setFieldValue(\"histoDescription\", \"\");\r\n                          }}\r\n                        >\r\n                          <Box sx={{ mr: \"3px\" }}>\r\n                            <AddHistoricalIcon fontSize=\"small\" />\r\n                          </Box>\r\n                          Add Historical\r\n                        </AddHistoricalButton>\r\n                      </Box>\r\n                    </ToolbarBox>\r\n                    <Box sx={{ height: \"457px\" }}>\r\n                      <Scrollbar>\r\n                        {/* ---------------------------------------------------------------- ACCORDION */}\r\n                        <span ref={scrollToEvents} />\r\n                        {historicalEvents.length > 0 &&\r\n                          historicalEvents.map((historical, index) => (\r\n                            <StyledAccordion square={true} key={index}>\r\n                              <AccordionSummary\r\n                                sx={{ pl: \"36px\" }}\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                              >\r\n                                <Box\r\n                                  sx={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    mr: \"81px\",\r\n                                  }}\r\n                                >\r\n                                  <AccordionTitle sx={{ mb: \"15px\" }}>\r\n                                    Historical Event\r\n                                  </AccordionTitle>\r\n                                  <Box sx={{ display: \"flex\" }}>\r\n                                    <AccordionValue sx={{ mr: \"23px\" }}>\r\n                                      {`${historical.clue_point_long}°`}\r\n                                    </AccordionValue>\r\n                                    <AccordionValue>\r\n                                      {`${historical.clue_point_lat}°`}\r\n                                    </AccordionValue>\r\n                                  </Box>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    mr: \"81px\",\r\n                                  }}\r\n                                >\r\n                                  <AccordionTitle sx={{ mb: \"15px\" }}>\r\n                                    Title\r\n                                  </AccordionTitle>\r\n                                  <AccordionValue>\r\n                                    {historical.clue_title}\r\n                                  </AccordionValue>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    mr: \"81px\",\r\n                                  }}\r\n                                >\r\n                                  <AccordionTitle sx={{ mb: \"15px\" }}>\r\n                                    Sub Title\r\n                                  </AccordionTitle>\r\n                                  <AccordionValue>{`Dolor Lorem Elit`}</AccordionValue>\r\n                                </Box>\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ pl: \"36px\", pt: \"16px\" }}>\r\n                                <HistoricalMultiField\r\n                                  autoComplete=\"off\"\r\n                                  error={Boolean(\r\n                                    touched.description && errors.description\r\n                                  )}\r\n                                  fullWidth\r\n                                  multiline\r\n                                  rows={2}\r\n                                  helperText={\r\n                                    touched.description && errors.description\r\n                                  }\r\n                                  placeholder=\"Write something here..\"\r\n                                  name=\"description\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={historical.description}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              </AccordionDetails>\r\n                              <SaveChangesButton variant=\"contained\">\r\n                                Save Changes\r\n                              </SaveChangesButton>\r\n                            </StyledAccordion>\r\n                          ))}\r\n                        {/* ----------------------------------------------------------------------- ACCORDION END */}\r\n                        <Box\r\n                          sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"flex-start\",\r\n                            position: \"relative\",\r\n                            mt: \"33px\",\r\n                          }}\r\n                        >\r\n                          <span ref={scrollRef} />\r\n                          <RowBox sx={{ width: \"688.31px\" }}>\r\n                            <ColumnBox>\r\n                              <Box sx={{ width: \"293px\", pl: \"13px\" }}>\r\n                                <FieldLabel>Historical Event</FieldLabel>\r\n                                <StyledTextField\r\n                                  sx={{ mb: \"35px !important\" }}\r\n                                  error={Boolean(\r\n                                    touched.histoLong && errors.histoLong\r\n                                  )}\r\n                                  fullWidth\r\n                                  helperText={\r\n                                    touched.histoLong && errors.histoLong\r\n                                  }\r\n                                  placeholder=\"Longitude\"\r\n                                  name=\"histoLong\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={values.histoLong}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                                <StyledTextField\r\n                                  sx={{ mt: 0 }}\r\n                                  error={Boolean(\r\n                                    touched.histoLat && errors.histoLat\r\n                                  )}\r\n                                  fullWidth\r\n                                  helperText={\r\n                                    touched.histoLat && errors.histoLat\r\n                                  }\r\n                                  placeholder=\"Latitude\"\r\n                                  name=\"histoLat\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={values.histoLat}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              </Box>\r\n                              <Box sx={{ width: \"293px\", ml: \"39px\" }}>\r\n                                <FieldLabel>Title</FieldLabel>\r\n                                <StyledTextField\r\n                                  error={Boolean(\r\n                                    touched.histoTitle && errors.histoTitle\r\n                                  )}\r\n                                  fullWidth\r\n                                  helperText={\r\n                                    touched.histoTitle && errors.histoTitle\r\n                                  }\r\n                                  placeholder=\"Historical Item\"\r\n                                  name=\"histoTitle\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={values.histoTitle}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                                <FieldLabel>Sub-Title</FieldLabel>\r\n                                <StyledTextField\r\n                                  sx={{ mt: 0 }}\r\n                                  error={Boolean(\r\n                                    touched.histoSubTitle &&\r\n                                      errors.histoSubTitle\r\n                                  )}\r\n                                  fullWidth\r\n                                  helperText={\r\n                                    touched.histoSubTitle &&\r\n                                    errors.histoSubTitle\r\n                                  }\r\n                                  placeholder=\"Write something here...\"\r\n                                  name=\"histoSubTitle\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={values.histoSubTitle}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              </Box>\r\n                            </ColumnBox>\r\n                          </RowBox>\r\n\r\n                          <Box\r\n                            sx={{\r\n                              width: \"296px\",\r\n                              height: \"470px\",\r\n                              position: \"absolute\",\r\n                              right: \"0\",\r\n                              top: \"0\",\r\n                            }}\r\n                          >\r\n                            <Scrollbar>\r\n                              <FileDropzoneHistorical\r\n                                accept=\"image/*\"\r\n                                files={historicalFiles}\r\n                                onDrop={handleHistoricalDrop}\r\n                                onRemove={handleHistoricalRemove}\r\n                                onRemoveAll={handleHistoricalRemoveAll}\r\n                              />\r\n                            </Scrollbar>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box sx={{ width: \"622px\", pl: \"16px\" }}>\r\n                          <FieldLabel>Description</FieldLabel>\r\n                          <StyledMultiTextField\r\n                            error={Boolean(\r\n                              touched.histoDescription &&\r\n                                errors.histoDescription\r\n                            )}\r\n                            fullWidth\r\n                            multiline\r\n                            rows={7}\r\n                            helperText={\r\n                              touched.histoDescription &&\r\n                              errors.histoDescription\r\n                            }\r\n                            placeholder=\"Write something here...\"\r\n                            name=\"histoDescription\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.histoDescription}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Box>\r\n                      </Scrollbar>\r\n                    </Box>\r\n                  </HistoricalBox>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </StyledForm>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RouteCreateForm;\r\n\r\nconst LegendBox = styled(Box)`\r\n  && {\r\n    margin-top: 28.67px;\r\n    padding-left: 27px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin-bottom: 45.36px;\r\n  }\r\n`;\r\n\r\nconst LegendItem = styled(Box)`\r\n  && {\r\n    margin-left: 18px;\r\n    font-family: \"Gilroy\";\r\n    font-weight: 400;\r\n    font-size: 13.6592px;\r\n    line-height: 14px;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nconst FlexiBox = styled(Box)`\r\n  && {\r\n    height: 14px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  && {\r\n    && p.Mui-error {\r\n      position: absolute;\r\n      bottom: -15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FieldLabel = styled(Box)`\r\n  && {\r\n    font-family: \"Gilroy Semibold\";\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    text-transform: capitalize;\r\n    color: #22333b;\r\n  }\r\n`;\r\n\r\nconst RowBox = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  && {\r\n    margin-top: 6px;\r\n    margin-bottom: 20px;\r\n    background: #ffffff;\r\n    color: #22333b;\r\n    font-family: \"Gilroy Light\";\r\n    font-weight: bold;\r\n    font-size: 1.11rem;\r\n    line-height: 27px;\r\n    border-radius: 22.1951px;\r\n    && .Mui-focused fieldset {\r\n      height: 67px;\r\n      border-width: 2px !important;\r\n      border-color: #2995a8;\r\n      border-style: solid;\r\n    }\r\n    && input {\r\n      height: 67px;\r\n      padding: 20px 33px 20px 33px;\r\n      font-family: \"Gilroy Light\";\r\n      font-weight: bold;\r\n      font-size: 1.11rem;\r\n      line-height: 27px;\r\n      color: rgba(0, 0, 0, 0.4);\r\n      display: flex;\r\n      align-items: center;\r\n      box-sizing: border-box;\r\n      border: 2px solid #f3f3f3;\r\n      border-radius: 22.1951px;\r\n      &::placeholder {\r\n        font-family: \"Gilroy Light\";\r\n        font-weight: bold;\r\n        font-size: 1.11rem;\r\n        line-height: 27px;\r\n        color: #000000;\r\n        opacity: 0.4;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n    }\r\n    && fieldset {\r\n      height: 67px;\r\n      margin-top: 2px;\r\n      border-style: hidden;\r\n      border-radius: 22.1951px;\r\n      /* border: 0; */\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledMultiTextField = styled(TextField)`\r\n  && {\r\n    margin-top: 6px;\r\n    background: #ffffff;\r\n    color: #22333b;\r\n    font-family: \"Gilroy Light\";\r\n    font-weight: bold;\r\n    font-size: 1.11rem;\r\n    line-height: 27px;\r\n    border-radius: 22.1951px;\r\n    && .MuiInputBase-multiline {\r\n      padding: 0;\r\n    }\r\n    && .Mui-focused fieldset {\r\n      border-width: 2px !important;\r\n      border-color: #2995a8;\r\n      border-style: solid;\r\n      border-radius: 22.1951px;\r\n    }\r\n    && textarea {\r\n      padding: 20px 13px 12px 33px;\r\n      font-family: \"Gilroy Light\";\r\n      font-weight: bold;\r\n      font-size: 1.11rem;\r\n      line-height: 25px;\r\n      color: rgba(0, 0, 0, 0.4);\r\n      display: flex;\r\n      align-items: center;\r\n      border: 2px solid #f3f3f3;\r\n      border-radius: 22.1951px;\r\n      &::placeholder {\r\n        font-family: \"Gilroy Light\";\r\n        font-weight: bold;\r\n        font-size: 1.11rem;\r\n        line-height: 27px;\r\n        color: #000000;\r\n        opacity: 0.4;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n    }\r\n    && fieldset {\r\n      margin-top: 2px;\r\n      border-style: hidden;\r\n      border-radius: 22.1951px;\r\n      /* border: 0; */\r\n    }\r\n  }\r\n`;\r\n\r\n//---------------------------------HISTORICAL EVENTS\r\nconst HistoricalBox = styled(Box)`\r\n  && {\r\n    margin-top: 46px;\r\n  }\r\n`;\r\n\r\nconst Title = styled(Box)`\r\n  && {\r\n    margin-left: 128px;\r\n    margin-bottom: 21px;\r\n    font-family: \"Circular Std Bold\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 30px;\r\n    line-height: 38px;\r\n    letter-spacing: -0.04em;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nconst ToolbarBox = styled(Box)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    border-bottom: 3px solid #d4e0f1;\r\n    position: relative;\r\n    margin-bottom: 44px;\r\n  }\r\n`;\r\n\r\nconst OrangeBorder = styled(Box)`\r\n  && {\r\n    width: 298px;\r\n    border-bottom: 7px solid #e4572e;\r\n    position: absolute;\r\n    bottom: -4px;\r\n    left: 42px;\r\n  }\r\n`;\r\n\r\nconst ColumnBox = styled(Box)`\r\n  && {\r\n    width: 688.31px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst AddHistoricalButton = styled(Button)`\r\n  && {\r\n    background-color: #0e5753;\r\n    border-radius: 13.6667px;\r\n    padding: 10px 16.21px 11px 22px;\r\n    font-family: \"Gilroy\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst StyledAccordion = styled(Accordion)`\r\n  && {\r\n    background-color: #f7f7f7;\r\n    padding: 16px auto 22px auto;\r\n    margin: auto 20px 23px 11px;\r\n    border: 1px solid #d8d8d8;\r\n    border-radius: 7px;\r\n    box-sizing: border-box;\r\n    box-shadow: none;\r\n    & .Mui-expanded {\r\n      margin: 12px 0 0 0 0;\r\n    }\r\n    &:before {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AccordionTitle = styled(Box)`\r\n  && {\r\n    font-family: \"Gilroy\";\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    color: #22333b;\r\n  }\r\n`;\r\n\r\nconst AccordionValue = styled(Box)`\r\n  && {\r\n    font-family: \"Gilroy Semibold\";\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    line-height: 18px;\r\n    color: #22333b;\r\n  }\r\n`;\r\n\r\nconst HistoricalMultiField = styled(TextField)`\r\n  && {\r\n    background: #ffffff;\r\n    color: #22333b;\r\n    font-family: \"Gilroy Light\";\r\n    font-weight: bold;\r\n    font-size: 17.7561px;\r\n    line-height: 27px;\r\n    border-radius: 10px;\r\n    && .MuiInputBase-multiline {\r\n      padding: 0;\r\n    }\r\n    && .Mui-focused fieldset {\r\n      border-width: 1px !important;\r\n      border-color: rgba(255, 177, 78, 1);\r\n      border-style: solid;\r\n      border-radius: 10px;\r\n    }\r\n    && textarea {\r\n      padding: 16px 7px 20px 16px;\r\n      font-family: \"Gilroy Light\";\r\n      font-weight: bold;\r\n      font-size: 17.7561px;\r\n      line-height: 27px;\r\n      color: rgba(0, 0, 0, 0.4);\r\n      display: flex;\r\n      align-items: center;\r\n      border: 1px solid #f3f3f3;\r\n      border-radius: 10px;\r\n      &::placeholder {\r\n        font-family: \"Gilroy Light\";\r\n        font-weight: bold;\r\n        font-size: 17.7561px;\r\n        line-height: 27px;\r\n        color: #000000;\r\n        opacity: 0.4;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n    }\r\n    && fieldset {\r\n      border-style: hidden;\r\n      border-radius: 10px;\r\n      /* border: 0; */\r\n    }\r\n  }\r\n`;\r\n\r\nconst SaveChangesButton = styled(Button)`\r\n  && {\r\n    background: #0e5753;\r\n    border-radius: 13.6667px;\r\n    padding: 10px 16.21px 11px 22px;\r\n    margin-top: 13px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    margin-left: auto;\r\n    margin-right: 24px;\r\n    font-family: \"Gilroy\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst SaveButton = styled(Button)`\r\n  && {\r\n    height: 60px;\r\n    width: 303px;\r\n    padding: 20px auto 20px;\r\n    background-image: url(\"/static/route-list/save-btn.png\");\r\n    background-color: #00755e;\r\n    border-radius: 10px;\r\n    font-family: \"Gilroy\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 1rem;\r\n    line-height: 19px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n"],"sourceRoot":""}